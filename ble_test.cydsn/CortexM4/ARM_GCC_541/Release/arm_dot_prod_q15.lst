ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"arm_dot_prod_q15.c"
  17              		.text
  18              	.Ltext0:
  19              		.section	.gnu.lto_.profile.d62ad72e,"",%progbits
  20 0000 789C6361 		.ascii	"x\234ca`d`a`\000\222\261\026\000\001\\\000\240"
  20      60646061 
  20      600092B1 
  20      1600015C 
  20      00A0
  21              		.text
  22              		.section	.gnu.lto_.icf.d62ad72e,"",%progbits
  23 0000 789C6361 		.ascii	"x\234ca`d\000\001\016\006\004`dhl9\273\216\205\001\000"
  23      60640001 
  23      0E060460 
  23      64686C39 
  23      BB8E8501 
  24 0015 0C2E0293 		.ascii	"\014.\002\223"
  25              		.text
  26              		.section	.gnu.lto_.jmpfuncs.d62ad72e,"",%progbits
  27 0000 789C6361 		.ascii	"x\234ca`d\000\201\030\006\004`d`a\004\002\376z `\003"
  27      60640081 
  27      18060460 
  27      64606104 
  27      02FE7A20 
  28 0016 7259C082 		.ascii	"rY\300\202\177\231\030\017>\330\364\221\373\013S+3P"
  28      7F99180F 
  28      3ED8F491 
  28      FB0B532B 
  28      3350
  29 0028 8C7139A3 		.ascii	"\214q9\243\014\003\003B\2328>\003\000\262I\013\214"
  29      0C030342 
  29      9A383E03 
  29      00B2490B 
  29      8C
  30              		.text
  31              		.section	.gnu.lto_.inline.d62ad72e,"",%progbits
  32 0000 789C6361 		.ascii	"x\234ca`d\000\0017\006\004`d\020\260\372\305\306\310"
  32      60640001 
  32      37060460 
  32      6410B0FA 
  32      C5C6C8
  33 0013 C8A40094 		.ascii	"\310\244\000\224c\3668\365\\\233\201\343\203\036\023"
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 2


  33      63F638F5 
  33      5C9B81E3 
  33      831E13
  34 0022 03CB0279 		.ascii	"\003\313\002y\026\006\026\240\002\026^F\006f\206\011"
  34      160616A0 
  34      02165E46 
  34      06668609 
  35 0032 7EF8180C 		.ascii	"~\370\030\014\000\214t\011\242"
  35      008C7409 
  35      A2
  36              		.text
  37              		.section	.gnu.lto_.pureconst.d62ad72e,"",%progbits
  38 0000 789C6361 		.ascii	"x\234ca`d`a`\000\222\273\030\001\001\337\000\306"
  38      60646061 
  38      600092BB 
  38      180101DF 
  38      00C6
  39              		.text
  40              		.section	.gnu.lto_arm_dot_prod_q15.d62ad72e,"",%progbits
  41 0000 789CA558 		.ascii	"x\234\245X\013PWe\026\277\347\373\376/\336\344+L+HI"
  41      0B505765 
  41      16BFE7FB 
  41      FE2FDEE4 
  41      2B4C2B48 
  42 0015 D212D16A 		.ascii	"\322\022\321j\233\331\335\331\331l{L\323l\273L3;\263"
  42      9BD9DDD9 
  42      D96C7B4C 
  42      D36CBB4C 
  42      333BB3
  43 0028 CCB8044C 		.ascii	"\314\270\004L:\201\270\240\315\264\355\214W\376<L\254"
  43      3A81B8A0 
  43      CDB4ED8C 
  43      57FE3C4C 
  43      AC
  44 0039 5093F54D 		.ascii	"P\223\365M\346\246\342\213\207\017D\004\376\220\210"
  44      E6A6E28B 
  44      870F4404 
  44      FE9088
  45 0048 9A8FC84C 		.ascii	"\232\217\310LMT\324\304R3!\3140\205=\347|\367\017\227"
  45      4D54D4C4 
  45      523321CC 
  45      30853DE7 
  45      7CF70F97 
  46 005c FF0317FB 		.ascii	"\377\003\027\373\217\\\357\367}\347\374\316\271\347"
  46      8F5CEFF7 
  46      7DE7FCCE 
  46      B9E7
  47 006a 7CDFEF9C 		.ascii	"|\337\357\234{-\032h\364[8B\323\254x\353\304{\010\320"
  47      7B2D1A68 
  47      F45B3842 
  47      D3AC78EB 
  47      C47B08D0 
  48 007e 40141CD6 		.ascii	"@\024\034\326\2649\016\001\026u#\325M\235\303\"\344"
  48      B4390E01 
  48      167523D5 
  48      4D9DC322 
  48      E4
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 3


  49 008f FC464DD3 		.ascii	"\374FM\323\003\255\331vM\017\266\202]\011\330\324M\235"
  49      03ADD976 
  49      4D0FB682 
  49      5D09D8D4 
  49      4D9D
  50 00a1 C32E6C4A 		.ascii	"\303.lJ\300\301\002\016\000\232\327\035\240\315\026"
  50      C0C1020E 
  50      009AD71D 
  50      A0CD16
  51 00b0 D262B5D9 		.ascii	"\322b\265\331\0350[Z4pY\240\033\177al\336\3561\276!"
  51      1D305B5A 
  51      347059A0 
  51      1B7F616C 
  51      DEEE31BE 
  52 00c5 EE08A8CF 		.ascii	"\356\010\250\317k\255\024\217\255\323\361\327\322\360"
  52      6BAD148F 
  52      ADD3F1D7 
  52      D2F0
  53 00d3 D3047DBD 		.ascii	"\323\004}\275\013r\244\246u\013\026\321`\035<\206RM"
  53      0B72A4A6 
  53      750B16D1 
  53      601D3C86 
  53      524D
  54 00e5 D9A52B64 		.ascii	"\331\245+d\207\310\221\000\026\034\266\035Zv!\224\206"
  54      87C89100 
  54      161CB61D 
  54      5A762194 
  54      86
  55 00f6 02227178 		.ascii	"\002\"qx\262\243`[\220\374\003hx\277g\321\271V\030\363"
  55      B2A3605B 
  55      90FC0368 
  55      78BF67D1 
  55      B95618F3 
  56 010a 89AE67E9 		.ascii	"\211\256g\351\256\212\306!Ku\227%GJ\330\000\022!\241"
  56      AE8AC621 
  56      4B759725 
  56      474AD800 
  56      1221A1
  57 011d 1846C27A 		.ascii	"\030F\302z\030\251\341\224\006\033a\014*\270\336-\330"
  57      18A9E194 
  57      061B610C 
  57      2AB8DE2D 
  57      D8
  58 012e 1824FFC4 		.ascii	"\030$\377\304\312\305{\333\276\0136\224w6\006\353\005"
  58      CAC57BDB 
  58      BE0B3694 
  58      773606EB 
  58      05
  59 013f 40BA9B7C 		.ascii	"@\272\233|\350nf\335\262\256\375\227\355\362e\326]\276"
  59      E86E66DD 
  59      B2AEFD97 
  59      EDF265D6 
  59      5DBE
  60 0151 B072BDCD 		.ascii	"\260r\275\315\320\255\312\033\252\014[`\213\2472F\245"
  60      D0ADCA1B 
  60      AA0C5B60 
  60      8BA73246 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 4


  60      A5
  61 0162 84955BF3 		.ascii	"\204\225[\363\033j\354\3625V>[R\374\203[\271\332\355"
  61      1B6AECF2 
  61      35563E5B 
  61      52FC835B 
  61      B9DAED
  62 0175 B5154A3D 		.ascii	"\265\025J=\225\255\032\224\301\030\322XV\325q\300\252"
  62      95AD1A94 
  62      C118D258 
  62      56D571C0 
  62      AA
  63 0186 22E2C061 		.ascii	"\"\342\300a\305\265\215\025!*\".Z>qyy\271\220\011\014"
  63      C5B58D15 
  63      212A222E 
  63      5A3E7179 
  63      79B99009 
  64 019b 9EB5FF50 		.ascii	"\236\265\377P\275-z\015\205\330u\2641l\231\356Z\242"
  64      BD2D7A0D 
  64      85D875B4 
  64      316C99EE 
  64      5AA2
  65 01ad 23BC0DB6 		.ascii	"#\274\015\266)\370\255\010_\216\360\364C\361\272\225"
  65      29F8AD08 
  65      5F8EF0F4 
  65      43F1BA95 
  66 01bd A77684C9 		.ascii	"\247v\204\311\177\260\352\306\372\362\353\201\244\212"
  66      7FB0EAC6 
  66      FAF2EB81 
  66      A48A
  67 01cb 7E35F143 		.ascii	"~5\361CeG\322S\355\350\353\230\241y\276\254kq\210-\233"
  67      6547D253 
  67      EDE8EB98 
  67      A179BEAC 
  67      6B71882D 
  68 01e0 0C454205 		.ascii	"\014EB\005D\303v\210V\231\204\235`\303\215\027\340\236"
  68      44C37688 
  68      5699849D 
  68      60C38D17 
  68      E09E
  69 01f2 A51CAEF9 		.ascii	"\245\034\256\371\344\260\224o\260\231\212\354\332\217"
  69      E4B0946F 
  69      B0998AEC 
  69      DA8F
  70 0200 ACCAC396 		.ascii	"\254\312\303\226\212\274Wj\016\344\352\005\271:\006"
  70      8ABC576A 
  70      0EE4EA05 
  70      B93A06
  71 020f DF0E95DE 		.ascii	"\337\016\225\336>\302.\006X\364\345{\307\245\\\015\214"
  71      3EC22E06 
  71      58F4E57B 
  71      C7A55C0D 
  71      8C
  72 0220 F0F321E7 		.ascii	"\360\363!\347\3310Dp!\302\362\317\376\274`\015\"\314"
  72      D9304470 
  72      21C2F2CF 
  72      FEBC600D 
  72      22CC
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 5


  73 0232 71E44807 		.ascii	"q\344H\007Ty\273\012\273\031\300\244\243\227\353:\320"
  73      5479BB0A 
  73      BB19C0A4 
  73      A397EB3A 
  73      D0
  74 0243 A3F996AF 		.ascii	"\243\371\226\257f\371\001zY\343i\344\377p\254v\200\216"
  74      66F9017A 
  74      59E369E4 
  74      FF70AC76 
  74      808E
  75 0255 B9EEC5B1 		.ascii	"\271\356\305\261:\210.\371\253K\357\356v\352-\027\177"
  75      3A882EF9 
  75      AB4BEFEE 
  75      76EA2D17 
  75      7F
  76 0266 B3E0DBAD 		.ascii	"\263\340\333\255\200\273\2372#\370\212\273\0333d\341"
  76      80BB9F32 
  76      23F88ABB 
  76      1B3364E1 
  77 0276 AB1D68B3 		.ascii	"\253\035h\263:x>\020h\327\007\341.\014\010\246K\010"
  77      3A783E10 
  77      68D707E1 
  77      2E0C08A6 
  77      4B08
  78 0288 D0090AC5 		.ascii	"\320\011\012\305[G\030\215\303\361\022x\037\015\007"
  78      5B47188D 
  78      C3F11278 
  78      1F0D07
  79 0297 F1D91ACC 		.ascii	"\361\331\032\314\247d\010\235\227\241\264>\214.\367"
  79      A764089D 
  79      97A1B43E 
  79      8C2EF7
  80 02a6 F364045F 		.ascii	"\363d\004_\207\323\322\003\2440\202\226h\177;\036d\263"
  80      87D3D203 
  80      A4308296 
  80      687F3B1E 
  80      64B3
  81 02b8 0FB1C187 		.ascii	"\017\261\301\207\371\032\311`Q|}\004E\202F\221\360h"
  81      F91AC960 
  81      517C7D04 
  81      45824691 
  81      F068
  82 02ca 4688E6D9 		.ascii	"F\210\346\331Giv\014\315\306\220\013c\031b\034+?\016"
  82      4769760C 
  82      CDC6900B 
  82      6319621C 
  82      2B3F0E
  83 02dd 745EC6D3 		.ascii	"t^\306\323Z,]&\340%8\216\356&\322\335$\272{\222\356"
  83      5A2C5D26 
  83      E025388E 
  83      EE26D2DD 
  83      24BA7B92 
  84 02f2 34ED3AEE 		.ascii	"4\355:\356S$\2636!\360?y\036\262\350\254\360\276U\373"
  84      5324B336 
  84      21F03F79 
  84      1EB2E8AC 
  84      F0BE55FB 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 6


  85 0306 B530A7FE 		.ascii	"\2650\247\376\210\235N\030nd\250\307X\266\202\263=\267"
  85      889D4E18 
  85      6E64A8C7 
  85      58B682B3 
  85      3DB7
  86 0318 6BD59324 		.ascii	"k\325\223$\343\224\016\247\264\243TC\367MW\030I\205"
  86      E3940EA7 
  86      B4A35443 
  86      F74D5718 
  86      4985
  87 032a 80804F51 		.ascii	"\200\200OQ\352<\376O \350\014\012a\370\333\204\324\220"
  87      EA3CFE4F 
  87      20E80C0A 
  87      61F8DB84 
  87      D490
  88 033c 3BD94277 		.ascii	";\331Bw\3360^TL4\377\354\226\305A/>\217Aq\312h\3121"
  88      DE305E54 
  88      4C34FFEC 
  88      96C5412F 
  88      3E8F4171 
  89 0354 AD69B007 		.ascii	"\255i\260\007^t\243\240\320\234\252\216b\220Mj\327;"
  89      5E74A3A0 
  89      D09CAA8E 
  89      62904D6A 
  89      D73B
  90 0366 175FFC11 		.ascii	"\027_\374\021\214\343\271=O\032\307SB\203\217\255\262"
  90      8CE3B93D 
  90      4F1AC753 
  90      42838FAD 
  90      B2
  91 0377 971C88D6 		.ascii	"\227\034\210\326\276\205\334\226\345\371\307\342\372"
  91      BE85DC96 
  91      E5F9C7E2 
  91      FA
  92 0384 1E57D767 		.ascii	"\036W\327g\335uh\002e\370\250v\013\360:\317.ZkD\207"
  92      DD756802 
  92      65F8A876 
  92      0BF03ACF 
  92      2E5A6B44 
  93 0399 34D88757 		.ascii	"4\330\207W\\\256\254\274z\312>\373\216>W\327\303sdh"
  93      5CAEACBC 
  93      7ACA3EFB 
  93      8E3E57D7 
  93      C3736468 
  94 03ad B710BC0E 		.ascii	"\267\020\274\016\373a6s\332\315\2639\264L\273ry\376"
  94      FB613673 
  94      DACDB339 
  94      B44CBB72 
  94      79FE
  95 03bf 6B653247 		.ascii	"ke2G\206\021\012\253\303\001\230\215\356\020\335\264"
  95      86110AAB 
  95      C301988D 
  95      EE10DDB4 
  96 03cf 94B70551 		.ascii	"\224\267\005Q\304\302\301\002\237\301\310\034y\037\206"
  96      C4C2C102 
  96      9FC1C81C 
  96      791F86
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 7


  97 03de 36ABB0ED 		.ascii	"6\253\260\355\370jI\242N\031\312\266[\241\276\331J\023"
  97      F86A49A2 
  97      4E19CAB6 
  97      5BA1BED9 
  97      4A13
  98 03f0 C6A65FDA 		.ascii	"\306\246_\332\342Zh}f\207>\027\3679n\320\203\360\014"
  98      E25A687D 
  98      66873E17 
  98      F7396ED0 
  98      83F00C
  99 0403 4629ABE5 		.ascii	"F)\253\345bw\213\0128=KO\364\011\200P\333\363\232A\345"
  99      62778B0A 
  99      383D4B4F 
  99      F4098050 
  99      DBF39A41 
 100 0418 2B187149 		.ascii	"+\030qIA\257\344\011\203\320\315)\210\350M\301\241>"
 100      41AFE409 
 100      83D0CD29 
 100      88E84DC1 
 100      A13E
 101 042a 291848D4 		.ascii	")\030H\324\017S\324#\372\213\272\225d\374F\275\226\326"
 101      0F53D423 
 101      FA8BBA95 
 101      64FC46BD 
 101      96D6
 102 043c 8E70D43F 		.ascii	"\216p\324?\367\033uZ\207\246~\242\216(\254\016_P\324"
 102      F71B755A 
 102      87A67EA2 
 102      8E28AC0E 
 102      5F50D4
 103 044f 23BCC2FC 		.ascii	"#\274\302\3749E\344>6\246\302\214\023\006\027y\204\371"
 103      3945E43E 
 103      36A6C28C 
 103      13061779 
 103      84F9
 104 0461 686F98AD 		.ascii	"ho\230\255\034\267\303\3460\327z\2059\314\251\354\264"
 104      1CB7C3E6 
 104      30D77A85 
 104      39CCA9EC 
 104      B4
 105 0472 DBD538DC 		.ascii	"\333\3258\334\211\325\2637\224+;+k\003\344Wj7\257]\322"
 105      89D5B337 
 105      942B3B2B 
 105      6B03E457 
 105      6A37AF5D 
 106 0487 FC93F48A 		.ascii	"\374\223\364\212\253\005\276\364\021\327c\024\327`\215"
 106      AB05BEF4 
 106      11D76314 
 106      D7608D
 107 0496 0F516388 		.ascii	"\017Qc\210\201VW\361]\251U~\255\320*\327,^k\367\201"
 107      815657F1 
 107      5DA9557E 
 107      ADD02AD7 
 107      2C5E6BF7 
 108 04ab F6950FB4 		.ascii	"\366\225\017\264\343\204\026\346\201\326\265'\253\322"
 108      E38416E6 
 108      81D6B527 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 8


 108      ABD2
 109 04b9 22CF28B4 		.ascii	"\"\317(\264\203\256\203\333C{\321\33454\030N\370 \330"
 109      83AE83DB 
 109      437BD1DC 
 109      3534184E 
 109      F820D8
 110 04cc 9304174E 		.ascii	"\223\004\027N\217\275\254\363\373\262\243GB<\322\276"
 110      8FBDACF3 
 110      FBB2A347 
 110      423CD2BE 
 111 04dc BF1B4886 		.ascii	"\277\033H\206\314\322\203\030\311\227d\347\324\231\225"
 111      CCD28318 
 111      C99764E7 
 111      D49995
 112 04eb F34362D6 		.ascii	"\363Cb\326**o|\241\006\351\037\275\266\367\364C\336"
 112      2A2A6F7C 
 112      A106E91F 
 112      BDB6F7F4 
 112      43DE
 113 04fd 75F614C4 		.ascii	"u\366\024\304P\251\321\340k\336%\315\354\373\346\332"
 113      50A9D1E0 
 113      6BDE25CD 
 113      ECFBE6DA 
 114 050d 79E78362 		.ascii	"y\347\203b7\263\265\212[q\344(\312t!\010\213\301i\210"
 114      37B3B58A 
 114      5B71E428 
 114      CA742108 
 114      8BC16988 
 115 0521 353CAC29 		.ascii	"5<\254);R\323l'5\247\034\332WS?f\317\221\203\224\"("
 115      3B52D36C 
 115      2735A71C 
 115      DA57533F 
 115      66CF9183 
 116 0538 4514B871 		.ascii	"E\024\270q\246\240+$\256\204\005N\333)\242g \026\306"
 116      A6A02B24 
 116      AE84054E 
 116      DB29A267 
 116      2016C6
 117 054b 8E74439F 		.ascii	"\216tC\237\2058\306]}P(\3248\017\324\245\201wA-\013"
 117      8538C65D 
 117      7D5028D4 
 117      380FD4A5 
 117      8177412D 
 118 0560 24D41644 		.ascii	"$\324\026D\035\327\203z\016Q/An\026{j\021\264\345<`"
 118      1DD7837A 
 118      0E512F41 
 118      6E167B6A 
 118      11B4E53C 
 119 0575 4FC35D60 		.ascii	"O\303]`o\000\301\2367;K\264\376~a\221%\252\023\212\364"
 119      6F00C19E 
 119      373B4BB4 
 119      FE7E6191 
 119      25AA138A 
 120 058a 2518E8C1 		.ascii	"%\030\350\3014u\347|\316\205\000\262\001\337@\024\007"
 120      3475E77C 
 120      CE8500B2 
 120      01DF4014 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 9


 120      07
 121 059b 7CD5B5E2 		.ascii	"|\325\265\342\246 \234\201\213\310Q\027\320\025\015"
 121      A6209C81 
 121      8BC85117 
 121      D0150D
 122 05aa 5AB91135 		.ascii	"Z\271\0215;\260\325v\027\007\252l\344\300%\363s\335"
 122      3BB0D576 
 122      1707AA6C 
 122      E4C025F3 
 122      73DD
 123 05bc CD81EF3C 		.ascii	"\315\201\357<\035\270\214\016|\313\016\\a\007>.*\377"
 123      1DB88C0E 
 123      7CCB0E5C 
 123      61073E2E 
 123      2AFF
 124 05ce 3930EA8E 		.ascii	"90\352\216\241=\204d7_\250\322\035\254}\325\320n^\266"
 124      A13D8464 
 124      375FA8D2 
 124      1DAC7DD5 
 124      D06E5EB6 
 125 05e2 EBC340D2 		.ascii	"\353\303@\322\376\036,tj4\270vw\345\037<\225\257\223"
 125      FE1E2C74 
 125      6A34B876 
 125      77E51F3C 
 125      95AF93
 126 05f5 3276EED0 		.ascii	"2v\356\320\306\312\325'J\364\260(]\230\224+n\237n\260"
 126      C6CAD527 
 126      4AF4B028 
 126      5D98942B 
 126      6E9F6EB0 
 127 0609 B072BBA1 		.ascii	"\260r\273\241\334\271\252\351\357\244\373#\351\016\305"
 127      DCB9AAE9 
 127      EFA4FB23 
 127      E90EC5
 128 0618 850ED65D 		.ascii	"\205\016\326]\335\264\25794\312i\326=\272\245\2430\230"
 128      DDB4AF39 
 128      34CA69D6 
 128      3DBAA5A3 
 128      3098
 129 062a 756F18BA 		.ascii	"uo\030\272\3077l\210&\335\237H\227\236\370&Xhg\355j"
 129      C7376C88 
 129      26DD9F48 
 129      979EF826 
 129      586867ED 
 130 063f 3B563351 		.ascii	";V3Qm\255\211\036)\370\255\327F\377\031b\015JC\005\243"
 130      6DAD891E 
 130      29F8ADD7 
 130      46FF1962 
 130      0D4A4305 
 131 0654 2533531A 		.ascii	"%3S\032\276\223t\366P\332\011U\012\216\231)\355\270"
 131      BE9374F6 
 131      50DA0955 
 131      0A8E9929 
 131      EDB8
 132 0666 7970520D 		.ascii	"ypR\015\262\364I\246\306\340\322\225\252\324w\336\306"
 132      B2F449A6 
 132      C6E0D295 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 10


 132      AAD477DE 
 132      C6
 133 0677 BE00FD51 		.ascii	"\276\000\375Q\345\342\026\274C\216\336\312\333\273\376"
 133      E5E216BC 
 133      438EDECA 
 133      DBBBFE
 134 0686 6F8AF606 		.ascii	"o\212\366\006\231;\366\241\334\261w\\Z\325\030X\004"
 134      993BF6A1 
 134      DCB1775C 
 134      5AD51858 
 134      04
 135 0697 2BE7E84C 		.ascii	"+\347\350L\344\303\250\346\377B\014B\317\364KA\203E"
 135      E4C3A8E6 
 135      FF420C42 
 135      CFF44B41 
 135      8345
 136 06a9 91783855 		.ascii	"\221x8U\226\333P\204\3353\334A\212w\273\202-\003\302"
 136      96DB5084 
 136      DD33DC41 
 136      8A77BB82 
 136      2D03C2
 137 06bc B219835A 		.ascii	"\262\031\203Z\207\230\337\223\206r\234\363nW]\221\036"
 137      8798DF93 
 137      86729CF3 
 137      6E575D91 
 137      1E
 138 06cd 36BA0C1B 		.ascii	"6\272\014\033?n\375\372r\260\311F\267\262\241\213\331"
 138      3F6EFDFA 
 138      72B0C946 
 138      B7B2A18B 
 138      D9
 139 06de F758EAE6 		.ascii	"\367X\352\346\010d\275!\376J]\376\236zDE\031\277\245"
 139      0864BD21 
 139      FE4A5DFE 
 139      9E7A4445 
 139      19BFA5
 140 06f1 AE9A482C 		.ascii	"\256\232H,K\020\2119\205\277RG\353\220-\374\227:Dau"
 140      4B108939 
 140      85BF5247 
 140      EB902DFC 
 140      973A4461 
 141 0706 C81158EA 		.ascii	"\310\021X\352\206x\225:\\s\312\007\330\230\332\0278"
 141      8678953A 
 141      5C73CA07 
 141      D898DA17 
 141      38
 142 0717 61F4F71E 		.ascii	"a\364\367\036\245.W\250}\221\363\3619\025rr\276'\376"
 142      A52E57A8 
 142      7D91F3F1 
 142      39157272 
 142      BE27FE
 143 072a D55EA50E 		.ascii	"\325^\245\016\243\373\200J\3737V5s\277\3174G\370Ms\236"
 143      A3FB804A 
 143      FB375635 
 143      73BFCF34 
 143      47F84D73 
 144 073f E014CCED 		.ascii	"\340\024\314\355M\001\265%\210cN\363p\237y\215\360\233"
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 11


 144      4D01B525 
 144      88634EF3 
 144      709F798D 
 144      F09B
 145 0751 D77715E8 		.ascii	"\327w\025\350\274{\316k>\345ux\177y\265\222\214\337"
 145      BC7BCE6B 
 145      3EE57578 
 145      7F79B592 
 145      8CDF
 146 0763 BCEEA6BC 		.ascii	"\274\356\246\274\316\347\274\276\3477\257\264\016\357"
 146      CEE7BCBE 
 146      E737AFB4 
 146      0EEF
 147 0771 F7935744 		.ascii	"\367\223WDau\370\200\362:\334+\257\357Q^G\2621\225W"
 147      6175F880 
 147      F23ADC2B 
 147      AFEF515E 
 147      47B23195 
 148 0786 9C30DEF3 		.ascii	"\2340\336\363<\362Z\320\233W\325\302\344\233\363\272"
 148      3CF25AD0 
 148      9B57D5C2 
 148      E49BF3BA 
 149 0796 DB2BAF23 		.ascii	"\333+\257#\020\327\024\272\201t)\013(t\303\270\257X"
 149      10D714BA 
 149      8174290B 
 149      2874C3B8 
 149      AF58
 150 07a8 70C0DD57 		.ascii	"p\300\335W\014\2441YH\000#<\000\006\324\213,\"\204\211"
 150      0CA43159 
 150      4800233C 
 150      0006D48B 
 150      2C228489 
 151 07bc F4445FCC 		.ascii	"\364D_\314;\273r\307\255\223\340\221\300w\367\010\022"
 151      3BBB72C7 
 151      AD93E091 
 151      C077F708 
 151      12
 152 07cd 2253E4   		.ascii	"\"S\344"
 153 07d0 EFAF6B46 		.ascii	"\357\257kF\026\213\030z;\327\340C\316w\241\360\323\214"
 153      168B187A 
 153      3BD7E043 
 153      CE77A1F0 
 153      D38C
 154 07e2 EC32389A 		.ascii	"\35428\232\304\340?\"\326p\321hF\012)\227\343}6#\273"
 154      C4E03F22 
 154      D670D168 
 154      460A2997 
 154      E37D3623 
 155 07f7 8CF2FAA1 		.ascii	"\214\362\372\241\360\323\214,\021F}g\350\245\242\267"
 155      F0D38C2C 
 155      11467D67 
 155      E8A5A2B7 
 156 0807 1961D458 		.ascii	"\031a\324X\237\315H?\250\252\031Y&\214\242\315\250\313"
 156      9FCD483F 
 156      A8AA1959 
 156      268CA2CD 
 156      A8CB
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 12


 157 0819 85BB1941 		.ascii	"\205\273\031A\314~\232\221~`U3\262\302\354\254g\237"
 157      CC7E9A91 
 157      7E605533 
 157      B2C2ECAC 
 157      679F
 158 082b B15250D1 		.ascii	"\261RP\321[%|\367\031\375`\253>\243\310\354\262g\013"
 158      5B257CF7 
 158      19FD60AB 
 158      3EA3C8EC 
 158      B2670B
 159 083e F11163AF 		.ascii	"\361\021c\257f\354\276\335\3010\234\377\270\357<\027"
 159      66ECBEDD 
 159      C1309CFF 
 159      B8EF3C17 
 160 084e FE1138BF 		.ascii	"\376\0218\277\206\347\373\324\364\3618\375_\236\356"
 160      86E7FBD4 
 160      F4F138FD 
 160      5F9EEE
 161 085d 53AE6371 		.ascii	"S\256cq\372\023a*\327\034\374\011\276\312u\237\255\260"
 161      FA13612A 
 161      D71CFC09 
 161      BECA759F 
 161      ADB0
 162 086f 56B8CB35 		.ascii	"V\270\3135*\030\337y<\312\365\272\236\343{R\225\353"
 162      2A18DF79 
 162      3CCAF5BA 
 162      9EE37B52 
 162      95EB
 163 0881 05E6E3BB 		.ascii	"\005\346\343\273\320<X$\334g\371\240q\226\037D'z\226"
 163      D03C5824 
 163      DC67F9A0 
 163      71961F44 
 163      277A96
 164 0894 B7539BFE 		.ascii	"\267S\233\376 \275\307\027\346\036.~ZI<\344\224\224"
 164      20BDC717 
 164      E61E2E7E 
 164      5A493CE4 
 164      9494
 165 08a6 CC2BBB4B 		.ascii	"\314+\273KOp\2616>X\302z\341\361.\377\020\277\313[\264"
 165      4F70B136 
 165      3E58C27A 
 165      E1F12EFF 
 165      10BFCB5B 
 166 08bb 82C3FC2E 		.ascii	"\202\303\374.\037\256)\256\216\320\324\200\353s\264"
 166      1FAE29AE 
 166      8ED0D480 
 166      EB73B4
 167 08ca 31604BD2 		.ascii	"1`K\322\030\2606h\347 \373\224\363\322\007\303\225Y"
 167      18B03668 
 167      E720FB94 
 167      F3D207C3 
 167      9559
 168 08dc B25972B5 		.ascii	"\262Yr\265\262\223\277\341\005`^\213\005\037\340v\000"
 168      B293BFE1 
 168      05605E8B 
 168      051FE076 
 168      00
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 13


 169 08ed A77488DB 		.ascii	"\247t\210\333\325S\321\242\\q4\265\035$}}\020+\252\377"
 169      D553D1A2 
 169      5C7134B5 
 169      1D247D7D 
 169      102BAAFF 
 170 0901 8DCECBF9 		.ascii	"\215\316\313\371M\311\355\204\027\202\234.\007\311}"
 170      4DC9ED84 
 170      17829C2E 
 170      07C97D
 171 0910 D6768870 		.ascii	"\326v\210p\312@\032\335/\367\005\241\207V\372\234\201"
 171      CA401ADD 
 171      2FF705A1 
 171      8756FA9C 
 171      81
 172 0921 CF783BF7 		.ascii	"\317x;\367Z\261\361\255\342a\365\255\242\276\275t]\260"
 172      5AB1F1AD 
 172      E261F5AD 
 172      A2BEBD74 
 172      5DB0
 173 0933 B2276183 		.ascii	"\262'a\203\347\363=\314\317g\343o\025\250\276\"\267"
 173      E7F33DCC 
 173      CF67E36F 
 173      15A8BE22 
 173      B7
 174 0944 75E35B4A 		.ascii	"u\343[J=\322)\243\314\237:\000\3256\232\324\371\321"
 174      3DD229A3 
 174      CC9F3A00 
 174      D5369AD4 
 174      F9D1
 175 0956 23B966CD 		.ascii	"#\271f\315\273*\224\316#\346/(\222\213\304\315\306\003"
 175      BB2A94CE 
 175      23E62F28 
 175      928BC4CD 
 175      C603
 176 0968 7383B188 		.ascii	"s\203\261\210\001\027\260(\330DO\014\233\251\\q\316"
 176      0117B028 
 176      D8444F0C 
 176      9BA95C71 
 176      CE
 177 0979 BE317236 		.ascii	"\2761r6\012\2655\366\340\252E\315\214v\312\301},r\344"
 177      0AB535F6 
 177      E0AA45CD 
 177      8C76CAC1 
 177      7D2C72E4 
 178 098d 472B8BB7 		.ascii	"G+\213\267\245\022z\324\313\304`\303\304\026/\023\250"
 178      A5127AD4 
 178      CBC460C3 
 178      C4162F13 
 178      A8
 179 099e FDA8F92D 		.ascii	"\375\250\371-5\306)-\367H\371%\304\267\243\230\261;"
 179      35C6292D 
 179      F748F925 
 179      C4B7A398 
 179      B13B
 180 09b0 E785DE03 		.ascii	"\347\205\336\003\345\227\022\300\030\017\200\001Q~\031"
 180      E59712C0 
 180      180F8001 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 14


 180      517E19
 181 09bf 21C4F87F 		.ascii	"!\304\370\177\375\314?S\017@Rd\213\034\376u\234\277"
 181      FDCC3F53 
 181      0F405264 
 181      8B1CFE75 
 181      9CBF
 182 09d1 1539BF8E 		.ascii	"\0259\277\2168\277\2349\177\233?\316\2573\016:\211\301"
 182      38BF9C39 
 182      7F9B3FCE 
 182      AF330E3A 
 182      89C1
 183 09e3 76E2FC18 		.ascii	"v\342\374\030\023\347o#\202\010\362\311\371u\006\325"
 183      13E76F23 
 183      8208F2C9 
 183      F97506D5 
 184 09f3 95FBE3FC 		.ascii	"\225\373\343\374\035n\032e\350\012\023\3473\352$\237"
 184      1D6E1A65 
 184      E80A13E7 
 184      33EA249F 
 185 0a03 9CDF0FAA 		.ascii	"\234\337\017\252\342\374\235n\002e\324\312\036\316\337"
 185      E2FC9D6E 
 185      0265D4CA 
 185      1ECEDF
 186 0a12 D62FE7F7 		.ascii	"\326/\347\367\003\2538\177\227\331YO\316\257b^\336\355"
 186      03AB387F 
 186      97D9594F 
 186      CEAF625E 
 186      DEED
 187 0a24 87F3FBC1 		.ascii	"\207\363\373\301V\234_mv\331\223\363k\030\273\326\007"
 187      569C5F6D 
 187      76D993F3 
 187      6B18BBD6 
 187      07
 188 0a35 E78FA22F 		.ascii	"\347\217\242/\311>8\177\014},\366\346\374 \234\256\367"
 188      C93E387F 
 188      0C7D2CF6 
 188      E6FC209C 
 188      AEF7
 189 0a47 E6FC4938 		.ascii	"\346\374I8\375\251\231\3639\370O\372\342\374>[aO\017"
 189      FDA999F3 
 189      39F84FFA 
 189      E2FC3E5B 
 189      614F0F
 190 0a5a E7A3022D 		.ascii	"\347\243\002-ys~\203\233\363K\316)\316/1\323|\251yP"
 190      79737E83 
 190      9BF34BCE 
 190      29CE2F31 
 190      D37CA979 
 191 0a6f D6C3F95F 		.ascii	"\326\303\371_\032\207{,:\321\227\363\307*\316\377j\223"
 191      1A877B2C 
 191      3AD197F3 
 191      C72ACEFF 
 191      6A93
 192 0a81 C1F9E39C 		.ascii	"\301\371\343\234Rx\023\3748&@\273'\301\0176\023|\224"
 192      527813FC 
 192      382640BB 
 192      27C10F36 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 15


 192      137C94
 193 0a94 99E02D66 		.ascii	"\231\340-f\202\027\212\340\253\026\033\004/z\031] \271"
 193      82178AE0 
 193      AB161B04 
 193      2F7A195D 
 193      20B9
 194 0aa6 5A9B8F22 		.ascii	"Z\233\217\"\243\217\263m:\211\214\216\301\223\370\""
 194      A38FB36D 
 194      3A898C8E 
 194      C193F822 
 195 0ab6 22C7DA0E 		.ascii	"\"\307\332\016\036\237\212\257\316X8h\030i\333io\207"
 195      1E9F8AAF 
 195      CE583868 
 195      1869DB69 
 195      6F87
 196 0ac8 C1585368 		.ascii	"\301XSh4\332v\"\000\375q(:\317*,\273T.\015v\350!Vk\037"
 196      34DA7622 
 196      00FD7128 
 196      3ACF2A2C 
 196      BB542E0D 
 197 0ae2 62A5B703 		.ascii	"b\245\267\003\335\316/\246\217\303^\246\276F\244>r\364"
 197      DDCE2FA6 
 197      8FC35EA6 
 197      BE46A43E 
 197      72F4
 198 0af4 32B24BD1 		.ascii	"2\262K\321\313\374\266J\277\353\270\253\262\355\230"
 198      CBFCB64A 
 198      BFEBB8AB 
 198      B2ED98
 199 0b03 91DF4D7E 		.ascii	"\221\337M~%\376\245\370'\236\213\177\365\211\264\304"
 199      25FEA5F8 
 199      279E8B7F 
 199      F589B4C4 
 200 0b13 69D313E2 		.ascii	"i\323\023\342\323ge$\245$<\233\2309-\351\225\304\231"
 200      D3676524 
 200      A5243C9B 
 200      98392DE9 
 200      95C499
 201 0b26 539F9F35 		.ascii	"S\237\2375=i\346\264\364\351\231\011\211\031iS\222\323"
 201      3D69E6B4 
 201      F4E99909 
 201      89196953 
 201      92D3
 202 0b38 674E9991 		.ascii	"gN\231\221\221\236<\345\237qO\215O\322\2543\3423\222"
 202      919E3CE5 
 202      9F714F8D 
 202      4FD2AC33 
 202      E23392
 203 0b4b FEC8D767 		.ascii	"\376\310\327g\003^OMOz3~\332\277Rl\031)\231\263Rg\312"
 203      035E4F4D 
 203      4F7A337E 
 203      DABF526C 
 203      192999B3 
 204 0b62 CC5969B6 		.ascii	"\314Yi\266\327S\337\234<}\246LM\315x\352\205\224\351"
 204      D753DF9C 
 204      3C7DA64C 
 204      4DCD78EA 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 16


 204      8594E9
 205 0b75 29198933 		.ascii	")\031\2113S\222\247\0306^\215O\237\374t\302\214\344"
 205      5392A718 
 205      365E8D4F 
 205      9FFC74C2 
 205      8CE4
 206 0b87 D484A4B4 		.ascii	"\324\204\244\264\314i\231\261\323\246'\245\316JN\211"
 206      CC6999B1 
 206      D3A627A5 
 206      CE4A4E89 
 207 0b97 E5D19437 		.ascii	"\345\321\2247\222\222\306O\325\344[\211\251\343\306"
 207      9292C64F 
 207      D5E45B89 
 207      A9E3C6
 208 0ba6 277838F9 		.ascii	"'x8\371\222!I.\245\241\223S\322R\322\3223\336Fy\313"
 208      9221492E 
 208      A5A19353 
 208      D252D2D2 
 208      33DE4679 
 209 0bbb 8CBFC43D 		.ascii	"\214\277\304=%\323g\304\341\337D\231\230\2244,3-515"
 209      25D367C4 
 209      E1DF4499 
 209      9894342C 
 209      332D3531 
 210 0bd0 39327AC2 		.ascii	"92z\302\343\221\321q\3707\021\377&i\362\367\031\232"
 210      E391D171 
 210      F83711FF 
 210      2669F2F7 
 210      199A
 211 0be2 C07F1334 		.ascii	"\300\177\0234<#\377\003\3363$m"
 211      3C23FF03 
 211      DE33246D 
 212              		.text
 213              		.section	.gnu.lto_.symbol_nodes.d62ad72e,"",%progbits
 214 0000 789C6361 		.ascii	"x\234ca`d\360`\000\002\246/\014\365\014\014\023\316"
 214      6064F060 
 214      0002A62F 
 214      0CF50C0C 
 214      13CE
 215 0012 3180A85D 		.ascii	"1\200\250]\015\212\014\014\214_\031\352\031\301\"\014"
 215      0D8A0C0C 
 215      8C5F19EA 
 215      19C1220C 
 216 0022 0C0D0D0A 		.ascii	"\014\015\015\012\014\014\314@\265G\376\276\327\006\323"
 216      0C0CCC40 
 216      B547FEBE 
 216      D706D3
 217 0031 C7FFEF65 		.ascii	"\307\377\357e\0053.C\031-\267\200\014\006\000\326|\025"
 217      05332E43 
 217      192DB780 
 217      0C0600D6 
 217      7C15
 218 0043 9D       		.ascii	"\235"
 219              		.text
 220              		.section	.gnu.lto_.refs.d62ad72e,"",%progbits
 221 0000 789C6361 		.ascii	"x\234ca`\004B \000\000\0009\000\007"
 221      60044220 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 17


 221      00000039 
 221      0007
 222              		.text
 223              		.section	.gnu.lto_.decls.d62ad72e,"",%progbits
 224 0000 789CBD57 		.ascii	"x\234\275WkL\024Y\026\256S\3254\3204\340\022w\226\030"
 224      6B4C1459 
 224      16AE53D5 
 224      34D034E0 
 224      12779618 
 225 0014 36416302 		.ascii	"6Ac\002\263\273\242(\222\315f\262\353\256f&&\343hB\364"
 225      B3BBA228 
 225      92CD66B2 
 225      EBAE6626 
 225      26E36842 
 226 0029 574F7ADB 		.ascii	"WOz\333\246\225N\240\033\273\233Q\366\307Z<D\026ey\215"
 226      A6954EA0 
 226      1BBB9B51 
 226      F6C75A3C 
 226      44166579 
 227 003e 22280FF1 		.ascii	"\"(\017\361\211\240 \215\203,\240\3508\212\370BfP\024"
 227      89A0208D 
 227      832CA0E8 
 227      388AF842 
 227      665014
 228 0051 5CF0FD1C 		.ascii	"\\\360\375\034\005d\344\241\340\236{oUW\243\340\356"
 228      0564E4A1 
 228      E09E7B6F 
 228      5557A3E0 
 228      EE
 229 0062 8FCD54B8 		.ascii	"\217\315T\270]uO\235s\277s\317\371\3569\205\212\003"
 229      5D754F9D 
 229      73BF73CF 
 229      F9EE3985 
 229      8A03
 230 0074 8E5C9BFC 		.ascii	"\216\\\233\3749n\237\300qg\360\371-^<\336W\341 o\217"
 230      396E9FC0 
 230      7167F0F9 
 230      2D5E3CDE 
 230      57E1206F 
 231 0089 70EC22B2 		.ascii	"p\354\"\262.\034\317\270\367/\"\377\225d\023\200c:\216"
 231      2E1CCFB8 
 231      F72F22FF 
 231      95641380 
 231      633A8E
 232 009c EB38CEE1 		.ascii	"\3538\316\3418\201\243\211\330\343b\323p\204\340s(\216"
 232      3881A389 
 232      D8E362D3 
 232      7084E073 
 232      288E
 233 00ae 401C8338 		.ascii	"@\034\2038\226\343\370\005\312\003\200a\005\342}\030"
 233      96E3F805 
 233      CA038061 
 233      05E27D18 
 234 00be EF33F13E 		.ascii	"\3573\361>\013\307J|\276&\341\253p.\340PI\230! \371"
 234      0BC74A7C 
 234      BE26E1AB 
 234      702EE050 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 18


 234      49982120 
 235 00d3 03EFFB34 		.ascii	"\003\357\3734\306\303\255\226\362\012a\220\207\345\032"
 235      C6C3AD96 
 235      F20A6190 
 235      87E51A
 236 00e2 20BBF247 		.ascii	" \273\362GQ\325\263\372\021_&\"\032=#\007?\015\253\024"
 236      51D5B3FA 
 236      115F2622 
 236      1A3D2307 
 236      3F0DAB14 
 237 00f6 F1CA1645 		.ascii	"\361\312\026E\236WL\367\216\274\250\323\012>T\351jj"
 237      9E574CF7 
 237      8EBCA8D3 
 237      0A3E54E9 
 237      6A6A
 238 0108 F52EB24C 		.ascii	"\365.\262L\200\006T8\355\277Tx\327\017\247\3235\020"
 238      80065438 
 238      EDBF5478 
 238      D70FA7D3 
 238      3510
 239 011a 3CC6F3A5 		.ascii	"<\306\363\245\231\207\037{@\250f?Y\245\267\243\367\327"
 239      99871F7B 
 239      40A8663F 
 239      59A5B7A3 
 239      F7D7
 240 012c 55A2380D 		.ascii	"U\2428\015\216\200\006\016\201\000\345\020F\334[\256"
 240      8E80060E 
 240      8100E510 
 240      46DC5BAE 
 241 013c C1DF7451 		.ascii	"\301\337tQL\026\263S\304\200\026?\016*!\010* \210\203"
 241      4C16B353 
 241      C480163F 
 241      0E2A2108 
 241      2A208883 
 242 0150 C3104ABC 		.ascii	"\303\020J\274!\212p\020\205\007\210\020\315\021\351"
 242      218A7010 
 242      85078810 
 242      CD11E9
 243 015f 6D496D96 		.ascii	"mIm\226W\027\334\000\301\265C\000\366\013tpl\320)>\360"
 243      5717DC00 
 243      C1B54300 
 243      F60B7470 
 243      6CD0293E 
 244 0174 1C7B9045 		.ascii	"\034{\220E\256\213\223Tx\371QY\214\376I\3664J\364\242"
 244      AE8B9354 
 244      78F95159 
 244      8CFE49F6 
 244      344AF4A2 
 245 0188 8B28AB83 		.ascii	"\213(\253\203d\304\346\2221'\031\001\257\000\000\233"
 245      64C4E692 
 245      31271901 
 245      AF00009B 
 246 0198 CA166EEB 		.ascii	"\312\026n\353\275\343\221\354\263\014\303\361r\344\017"
 246      BDE391EC 
 246      B30CC3F1 
 246      72E40F
 247 01a7 39AF57A8 		.ascii	"9\257W\250\205\\\240\241O~}@$\241\237\241Q|#\362\264"
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 19


 247      855CA0A1 
 247      4F7E7D40 
 247      24A19FA1 
 247      517C23F2 
 248 01bc 3727ABFC 		.ascii	"7'\253\374\230\\\224\257\215(\277|\301y\312[\330\303"
 248      985C94AF 
 248      8D28BF7C 
 248      C179CA5B 
 248      D8C3
 249 01ce 8C0B1B06 		.ascii	"\214\013\033\006[=X\336\274pZ\367\274\242\316\227\345"
 249      5B3D58DE 
 249      BC705AF7 
 249      BCA2CE97 
 249      E5
 250 01df AD195FF3 		.ascii	"\255\031_\363\215\307k\267\251A\023\232N\214KS\304Y"
 250      8DC76BB7 
 250      A941139A 
 250      4E8C4B53 
 250      C459
 251 01f1 494731F2 		.ascii	"IG1\362\3070\005\265$\005u\230\227\031R^jPx\024\205"
 251      C73005B5 
 251      24057598 
 251      9719525E 
 251      6A507814 
 252 0206 2CC70D17 		.ascii	",\307\015\027tI\233\221.\360\015&\331\251$y\206F\342"
 252      74499B91 
 252      2EF00D26 
 252      D9A92479 
 252      8646E2
 253 0219 CED8996C 		.ascii	"\316\330\231l^\250\346\211\023\374\266Swv\371N\215\362"
 253      5EA8E689 
 253      13FCB653 
 253      7776F94E 
 253      8DF2
 254 022b AF2951FA 		.ascii	"\257)Q\372\363>\251 L\252G\220\343\012\010b2\224\374"
 254      F33EA920 
 254      4CAA4790 
 254      E30A0862 
 254      3294FC
 255 023e F45B9DBE 		.ascii	"\364[\235\276B\225@Q\262w\237KUHxs\347W\251\242\010"
 255      42954051 
 255      B2779F4B 
 255      55487873 
 255      E757A9A2 
 256 0253 D084A60D 		.ascii	"\320\204\246\015\212i=H,\234\314\221\306I\034A\224\276"
 256      8A693D48 
 256      2C9CCC91 
 256      C6491C41 
 256      94BE
 257 0265 14678A9F 		.ascii	"\024g\212\2376Ca.]T&/\007'@+\345\355\346\340\353NP\361"
 257      3643612E 
 257      5D54262F 
 257      0727402B 
 257      E5EDE6E0 
 258 027d 4C06AB55 		.ascii	"L\006\253U\356\0070\344\375\003\030\302\016`{\326\300"
 258      EE0730E4 
 258      FD0318C2 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 20


 258      0E607BD6 
 258      C0
 259 028e 5E4FA197 		.ascii	"^O\241\227\355\342l\246\263\306\307\265\213\206\013"
 259      EDE26CA6 
 259      B3C6C7B5 
 259      8B860B
 260 029d 4B726898 		.ascii	"Krh\230\317 \342ie\033!S\237\245oq\023!\322&N\241\260"
 260      CF20E269 
 260      651B2153 
 260      9FA56F71 
 260      1321D226 
 261 02b4 996DA27C 		.ascii	"\231m\242|oN\231Zx\312@\012j\017\015i\\ \375y\021\225"
 261      6F4E995A 
 261      78CA400A 
 261      6A0F0D69 
 261      5C20FD79 
 262 02ca 24CAE710 		.ascii	"$\312\347\020\343;\005\343\014L\015rvr\220\023\351M"
 262      E33B05E3 
 262      0C4C0D72 
 262      76729013 
 262      E94D
 263 02dc 2F3DE8FE 		.ascii	"/=\350\376\311Z'\201\006\340n\331\345=<\3566\220\004"
 263      C95A2781 
 263      06E06ED9 
 263      E53D3CEE 
 263      369004
 264 02ef 0008279B 		.ascii	"\000\010'\233\333\276dsQ\374;\316\235]\203\345\2740"
 264      DBBE6473 
 264      51FC3BCE 
 264      9D5D83E5 
 264      BC30
 265 0301 485D83EF 		.ascii	"H]\203\357\336\0165\3733\302\362$6}\027\213|\030a\247"
 265      DE0E35FB 
 265      33C2F224 
 265      367D178B 
 265      7C1861A7 
 266 0315 A1E32F8E 		.ascii	"\241\343/\216fm\367\227\231$\246\210\232\203\350\325"
 266      666DF797 
 266      9924A688 
 266      9A83E8D5 
 267 0325 2574E022 		.ascii	"%t\340\"\361\352\012z\025(y\325\212\302\363nt\375\335"
 267      F1EA0A7A 
 267      152879D5 
 267      8AC2F36E 
 267      74FDDD
 268 0338 71B2C5CB 		.ascii	"q\262\305\313\350\326\005e\213\201\022\217\216\355\270"
 268      E8D60565 
 268      8B81128F 
 268      8EEDB8
 269 0347 94E7278C 		.ascii	"\224\347'\214\263\340\034y\360\366{o\267\340\314\246"
 269      B3E01C79 
 269      F0F67B6F 
 269      B7E0CCA6 
 270 0357 146C47CB 		.ascii	"\024lG\3136\305\362\262\302\243\367\334\270:\211\033"
 270      36C5F2B2 
 270      C2A3F7DC 
 270      B83A891B 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 21


 271 0367 08D25B56 		.ascii	"\010\322[V\203\3454MEA\236\336:\370\200w#k\034%k\007"
 271      83E5344D 
 271      45419EDE 
 271      3AF88077 
 271      236B1C25 
 272 037d 827CAF80 		.ascii	"\202|\257\200\264\177\000\344\207\311AF\323/\014xk$"
 272      B47F00E4 
 272      87C94146 
 272      D32F0C78 
 272      6B24
 273 038f 93ECFFC9 		.ascii	"\223\354\377\311d\353\216'\343\376\023\350}m\002\275"
 273      64EB8E27 
 273      E3FE13E8 
 273      7D6D02BD 
 274 039f AFBBE8DD 		.ascii	"\257\273\350\335\372(\371\021O\323\2132ha\351\275\327"
 274      FA28F911 
 274      4FD38B32 
 274      6861E9BD 
 274      D7
 275 03b0 31DCAD75 		.ascii	"1\334\255u\011;\231\320\371\\|\252\015\334N\233J\212"
 275      093B99D0 
 275      F95C7CAA 
 275      0DDC4E9B 
 275      4A8A
 276 03c2 18AC8255 		.ascii	"\030\254\202U\037\271\255x\023\260\361aIWI\247\370\245"
 276      1FB9AD78 
 276      13B0F161 
 276      495749A7 
 276      F8A5
 277 03d4 F3B1E7AC 		.ascii	"\363\261\347\254R\261\264Z\354\255\277\263\242\2502"
 277      52B1B45A 
 277      ECADBFB3 
 277      A2A832
 278 03e3 4DCC4E12 		.ascii	"M\314N\022\305ET\021\252\225xT\223&\300A\025ta\301\354"
 278      C5455411 
 278      AA957854 
 278      9326C041 
 278      157461C1 
 279 03f8 825968BB 		.ascii	"\202Yh\273\363P\203S-\234\247A\205KU\217\267\250\205"
 279      F3508353 
 279      2D9CA741 
 279      854B558F 
 279      B7A885
 280 040b 3636A9DE 		.ascii	"66\251\336\371\240\325\023\375\202[\324\212H\222\232"
 280      F9A0D513 
 280      FD825BD4 
 280      8A48929A 
 281 041b 0FF80A1D 		.ascii	"\017\370\012\035\354u\331\276\342vo\362\272\007_\303"
 281      EC75D9BE 
 281      E2766FF2 
 281      BA075FC3 
 282 042b BF99DB47 		.ascii	"\277\231\333G*_Wk\350^V}DM\316\027\345\224{R\001if\267"
 282      2A5F576B 
 282      E85E567D 
 282      444DCE17 
 282      E5947B52 
 283 0443 99D6CD37 		.ascii	"\231\326\3157y\243^T\270L\013w\230,\343\306\211\\5\225"
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 22


 283      79A35E54 
 283      B84C0B77 
 283      982CE3C6 
 283      895C3595 
 284 0457 ADD4C25D 		.ascii	"\255\324\302]&\273\226\262\365\225\337\314[\252\022"
 284      26BB96B2 
 284      F595DFCC 
 284      5BAA12
 285 0466 D18B2ED6 		.ascii	"\321\213.\326T\360\330\251\242:\367a&\225\274\272\223"
 285      54F0D8A9 
 285      A23AF761 
 285      2695BCBA 
 285      93
 286 0477 99E729F4 		.ascii	"\231\347)\3640\217\372K^\356'K\300C\334\361\003\022"
 286      308FFA4B 
 286      5EEE274B 
 286      C043DCF1 
 286      0312
 287 0489 1C140E76 		.ascii	"\034\024\016v\0274z\010\017\231FE\376\3366\272\245\307"
 287      17347A08 
 287      0F994645 
 287      FEDE36BA 
 287      A5C7
 288 049b C4E7470C 		.ascii	"\304\347G\014\345u\346\223\273>\356\241F\007\244P\303"
 288      E575E693 
 288      BB3EEEA1 
 288      4607A450 
 288      C3
 289 04ac 135481A7 		.ascii	"\023T\201\2474\332\367\344hw\236\314\030 \321\356\315"
 289      34DAF7E4 
 289      68779ECC 
 289      1820D1EE 
 289      CD
 290 04bd 167B4F3E 		.ascii	"\026{O>\334\220\274'\255\031\243-t\376\222(B\267\034"
 290      DC90BC27 
 290      AD19A32D 
 290      74FE9228 
 290      42B71C
 291 04d0 6DE80515 		.ascii	"m\350\005\025\231\261>\367\214\006{8\267\021\373\371"
 291      99B13EF7 
 291      8C067B38 
 291      B711FBF9 
 292 04e0 6D0FEACC 		.ascii	"m\017\352\314\217\373.\327x\017\022\016\303F\267\232"
 292      8FFB2ED7 
 292      780F120E 
 292      C346B79A 
 293 04f0 16CA6ADA 		.ascii	"\026\312j\332\256\234;\371\336\302}\017V\377\313\207"
 293      AE9C3BF9 
 293      DEC27D0F 
 293      56FFCB87 
 294 0500 CB78766A 		.ascii	"\313xvj\223')\273\003\310\313P\211\227/P\370\334\355"
 294      932729BB 
 294      03C8CB50 
 294      89972F50 
 294      F8DCED
 295 0513 D87EC9CA 		.ascii	"\330~\311\312_?F\277O!B\250tn7\247\036\314\362\021\372"
 295      5F3F46BF 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 23


 295      4F2142A8 
 295      746E37A7 
 295      1ECCF211 
 296 0528 184A71CE 		.ascii	"\030Jq\316\253\006\315\324(?M\211\322\237\367GZ\377"
 296      AB06CDD4 
 296      283F4D89 
 296      D29FF747 
 296      5AFF
 297 053a 0611E4A5 		.ascii	"\006\021\344\245\002\322/w\231\257\373\362C\205\021"
 297      02D22F77 
 297      99AFFBF2 
 297      438511
 298 0549 B6EB6345 		.ascii	"\266\353cE\327\212}\330\371\222\016K\200\373Y\031\""
 298      D78A7DD8 
 298      F9920E4B 
 298      80FB5919 
 298      22
 299 055a 36303708 		.ascii	"607\010\346\321\243\265\363\306x\265\177@6\325n\026"
 299      E6D1A3B5 
 299      F3C678B5 
 299      7F4036D5 
 299      6E16
 300 056c 17396859 		.ascii	"\0279hY\224=\342`\030\002d\033\242\335r\346Z\237Z\030"
 300      943DE260 
 300      1802641B 
 300      A2DD72E6 
 300      5A9F5A18 
 301 0580 6340870E 		.ascii	"c@\207\016\027W\373\011ij:\331r\372\333]\224\032\243"
 301      1757FB09 
 301      696A3AD9 
 301      72FADB5D 
 301      941AA3
 302 0593 3297BB37 		.ascii	"2\227\2737\027\216{S.\021\257Y\247)\371\241\177\030"
 302      178E7B53 
 302      2E11AF59 
 302      A729F9A1 
 302      7F18
 303 05a5 5CD5F70D 		.ascii	"\\\325\367\015\243\307x\222\230\245q\011\307\2300\353"
 303      A3C77892 
 303      98A57109 
 303      C79830EB 
 304 05b5 6C7D01EF 		.ascii	"l}\001\357\316\231\301\011'\376-e\314\270\314\230M\316"
 304      CE99C109 
 304      27FE2D65 
 304      CCB8CC98 
 304      4DCE
 305 05c7 E3255EC8 		.ascii	"\343%^\310\230f<\2377\006b\036=\274\262U,M\026\027\265"
 305      98663C9F 
 305      3706621E 
 305      3DBCB255 
 305      2C4D1617 
 306 05dc F0441346 		.ascii	"\360D\023F\\\224y\215\224\031q;\243h;\322R{E+\264\322"
 306      5C94798D 
 306      9419713B 
 306      A3683BD2 
 306      527B452B 
 307 05f2 6DA8DAAE 		.ascii	"m\250\332\256w?\364\207\351\263g\207\346J\015X\204\035"
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 24


 307      773FF487 
 307      E9B36787 
 307      E64A0D58 
 307      841D
 308 0604 7E6E394A 		.ascii	"~n9J\342\005H\346\247\203\310\317\202M|(\244\360\263"
 308      E20548E6 
 308      A783C8CF 
 308      824D7C28 
 308      A4F0B3
 309 0617 21959F4D 		.ascii	"!\225\237M9XFL\232\217\216\256\313\021\305\226y$v\360"
 309      3958464C 
 309      9A8F8EAE 
 309      CB11C596 
 309      792476F0 
 310 062b 0A98BACB 		.ascii	"\012\230\272\313~.\361><\210i'\213\3155\243P(6\357\230"
 310      7E2EF13E 
 310      3C886927 
 310      8BCD35A3 
 310      502836EF 
 311 0640 47F7F7E3 		.ascii	"G\367\367\343\324\332\224\007\315%\243K\223H\025F%\216"
 311      D4DA9407 
 311      CD25A34B 
 311      93481546 
 311      258E
 312 0652 B8207F21 		.ascii	"\270 \177!\342\234D!\363p\276\006\011\256f}\334\223"
 312      E29C4421 
 312      F370BE06 
 312      09AE667D 
 312      DC93
 313 0664 94BEBED1 		.ascii	"\224\276\276\321oTLD\026\330\200\242\242\202\356\243"
 313      6F544C44 
 313      16D880A2 
 313      A282EEA3 
 314 0674 7E423BDD 		.ascii	"~B;\335/\177r\250\352\254\227[/\377\023\355A\031\274"
 314      2F7F72A8 
 314      EAAC975B 
 314      2FFF13ED 
 314      4119BC
 315 0687 06D27917 		.ascii	"\006\322y\027\315\324\256\032\377^\227\375\007\206@"
 315      CDD4AE1A 
 315      FF5E97FD 
 315      078640
 316 0696 2D517633 		.ascii	"-Qv3\037\004i<e\325\300H_\255J\350f\030M\031\317\232"
 316      1F04693C 
 316      65D5C048 
 316      5FAD4AE8 
 316      66184D19 
 317 06ac DCBB5518 		.ascii	"\334\273U\030\355V\231\210\261E\301@\310)A\266N\016"
 317      ED569988 
 317      B145C140 
 317      C82941B6 
 317      4E0E
 318 06be 52575F5B 		.ascii	"RW_[\351-\334c \316\224\326KZ\245[uYi\267\312F\220\177"
 318      E92DDC63 
 318      20CE94D6 
 318      4B5AA55B 
 318      755969B7 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 25


 319 06d6 2A20991F 		.ascii	"* \231\037\000\311\232\004\204\330#\320\233WWK\371\011"
 319      00C99A04 
 319      84D823D0 
 319      9B57574B 
 319      F909
 320 06e8 ED87D421 		.ascii	"\355\207\324!\205\2149<m?\344\216\332\307\257w\234R"
 320      858C393C 
 320      6D3FE48E 
 320      DAC7AF77 
 320      9C52
 321 06fa 4FD0265E 		.ascii	"O\320&^(\332\271\222v.\325\356l\2748(\270\3127;%[\357"
 321      28DAB992 
 321      762ED5EE 
 321      6CBC3828 
 321      B8CA373B 
 322 0711 F7D478C8 		.ascii	"\367\324x\310+\244\222\025\276p\357M\313\344f\227\361"
 322      2BA49215 
 322      BE70EF4D 
 322      CBE46697 
 322      F1
 323 0722 BCEC19B3 		.ascii	"\274\354\031\263\375\232\327B\036?\205\361\204\306\206"
 323      FD9AD742 
 323      1E3F85F1 
 323      84C686
 324 0731 A5970583 		.ascii	"\245\227\005\203\360\245\263\263\223\265\216\355h\277"
 324      F0A5B3B3 
 324      93B58EED 
 324      68BF
 325 073f 8DD9DFAB 		.ascii	"\215\331\337\253m\037\363\373P\261\336\301\223\243\227"
 325      6D1FF3FB 
 325      50B1DEC1 
 325      93A397
 326 074e CF93A347 		.ascii	"\317\223\243G&\244=\366\265\265k\246.9\005\274Tr.\262"
 326      26A43DF6 
 326      B5B56BA6 
 326      2E3905BC 
 326      54722EB2 
 327 0762 767E7AA0 		.ascii	"v~z\240\372\200\226}@\0118}\236z\277W\372\200\"\213"
 327      FA80967D 
 327      4009387D 
 327      9E7ABF57 
 327      FA80228B 
 328 0776 750C378D 		.ascii	"u\0147\215j\205'\354<:\223{v\373Ah\020\340b\300\222"
 328      6A8527EC 
 328      3C3A937B 
 328      76FB4168 
 328      10E062C0 
 329 078b 4BFE05E4 		.ascii	"K\376\005\344\240\024c\272\213\027\344\177#\013ED\357"
 329      A01463BA 
 329      8B17E47F 
 329      230B4544 
 329      EF
 330 079c DB48C4F8 		.ascii	"\333H\304\370\354E\357\264\312\366\225\211\352@\016"
 330      EC45EFB4 
 330      CAF69589 
 330      EA400E
 331 07ab 16D07A07 		.ascii	"\026\320z\007E\230\344R\352M\011\246\270\230\361\250"
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 26


 331      4598E452 
 331      EA4D09A6 
 331      B898F1A8 
 332 07bb 6CDBF06D 		.ascii	"l\333\360m\220J \366t\240k\357\304\367\205<\361~7\037"
 332      904A20F6 
 332      74A06BEF 
 332      C4F7853C 
 332      F17E371F 
 333 07cf 20       		.ascii	" "
 334 07d0 EF814E48 		.ascii	"\357\201NH\322\206z\206|\225\242\311,\344\217\030\016"
 334      D2867A86 
 334      7C95A2C9 
 334      2CE48F18 
 334      0E
 335 07e1 CA78A568 		.ascii	"\312x\245h\222\011Zt\015\336x\341%\274\230\252V6v\016"
 335      92095A74 
 335      0DDE78E1 
 335      25BC98AA 
 335      5636760E 
 336 07f5 1F56BBBE 		.ascii	"\037V\273\276P\030\013zO\324%M\350\232\023i\264\237"
 336      50180B7A 
 336      4FD4254D 
 336      E89A1369 
 336      B49F
 337 0807 A6611F2F 		.ascii	"\246a\037/U\300#\305Y\215Z\251\002\3764\364\327\202"
 337      55C023C5 
 337      598D5AA9 
 337      02FE34F4 
 337      D782
 338 0819 E17BA288 		.ascii	"\341{\242\210%,\025\246\023M\330#\037\002\330\313\253"
 338      252C15A6 
 338      134DD823 
 338      1F02D8CB 
 338      AB
 339 082a C84CF94A 		.ascii	"\310L\371J9\200e\304\353\263/V\006/\016\017\347\324"
 339      398065C4 
 339      EBB32F56 
 339      062F0E0F 
 339      E7D4
 340 083c 76F3DF4C 		.ascii	"v\363\337Lz\307F\343\037t\3616\353Z\233!.x\2159\326"
 340      7AC746E3 
 340      1F74F136 
 340      EB5A9B21 
 340      2E788D39 
 341 0851 640F0EDD 		.ascii	"d\017\016\335\360\373\310\217u\306\304x\233\311n\327"
 341      F0FBC88F 
 341      75C6C478 
 341      9BC96ED7 
 342 0861 C5DBADC6 		.ascii	"\305\333\255\306`\243\315dpXm\272\210\260\210\211\002"
 342      60A3CD64 
 342      70586DBA 
 342      88B08889 
 342      02
 343 0872 735CBCD5 		.ascii	"s\\\274\325\346\320\255\265$\350\014\2668\335\302\260"
 343      E6D0ADB5 
 343      24E80CB6 
 343      38DDC2B0 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 27


 344 0882 88B0705D 		.ascii	"\210\260p]\254y\265n\255\321H$s,V\213i\216\311\260\332"
 344      AC79B56E 
 344      ADD14824 
 344      732C568B 
 344      698EC9B0 
 345 0897 2CBD335B 		.ascii	",\2753[\214\261\011\321&\235\335\021\035mZ\023\026\303"
 345      8CB109D1 
 345      269DDD11 
 345      1D6D5A13 
 345      16C3
 346 08a9 4D432D7D 		.ascii	"MC-}\264\325\241G'\242\365\353\302\027z\353\365f\213"
 346      B4D5A147 
 346      27A2F5EB 
 346      C2177AEB 
 346      F5668B
 347 08bc 233242EF 		.ascii	"#2B\357H\202\377\277o\023}\222\275\2113\030c\314\026"
 347      4882FFBF 
 347      6F137D92 
 347      BD893318 
 347      63CC16
 348 08cf 934E8F3E 		.ascii	"\223N\217>\031\022b\035zGb\274\311\216\336yJ\256|\365"
 348      1912621D 
 348      7A4762BC 
 348      C98EDE79 
 348      4AAE7CF5 
 349 08e3 7379624F 		.ascii	"sybO\264\353\364\030\034\304Ex\217u\221\013\364\216"
 349      B4EBF418 
 349      1CC44578 
 349      8F75910B 
 349      F48E
 350 08f5 DF84E916 		.ascii	"\337\204\351\026/\213Z\0325gI\324\2129q\006\263E\267"
 350      2F8B5A1A 
 350      356749D4 
 350      8A397106 
 350      B345B7
 351 0908 9469CF25 		.ascii	"\224i\317%\261\21338b\\\376j\364\372\0044]0_\357\360"
 351      B18B3338 
 351      625CFE6A 
 351      F4FA0434 
 351      5D305FEF 
 352 091d 921F5840 		.ascii	"\222\037X@\303#\365\016O\351\356\201a\326;>yg\321(k"
 352      C323F50E 
 352      4FE9EE81 
 352      61D63B3E 
 352      7967D128 
 353 0932 82CD68D2 		.ascii	"\202\315h\322\375\305`7\033\227\341\242\237&X\214\016"
 353      FDC56037 
 353      1B97E1A2 
 353      9F26588C 
 353      0E
 354 0943 B3D562D7 		.ascii	"\263\325b\327\275\233\2420#\247\2163\305\031\343\023"
 354      BD9BA230 
 354      23A78E33 
 354      C519E313 
 355 0953 55B126C3 		.ascii	"U\261&\303\032O\213\325\021c\263\256\207p\3175\226`"
 355      1A4F8BD5 
 355      1163B3AE 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 28


 355      8770CF35 
 355      9660
 356 0965 7BBCC988 		.ascii	"{\274\311\210\022\213%!6v\335\317\0266\207\315lY\213"
 356      128B2521 
 356      3676DDCF 
 356      163687CD 
 356      6C598B
 357 0978 0110D647 		.ascii	"\001\020\326GFHA y\363\222\037\204\365\013\346{\351"
 357      46484120 
 357      79F3921F 
 357      84F50BE6 
 357      7BE9
 358 098a F551CB3E 		.ascii	"\365Q\313>\377\363\347K|\015\261\353\015\211v\014K,"
 358      FFF3E74B 
 358      7C0DB1EB 
 358      0D89760C 
 358      4B2C
 359 099c 667DE167 		.ascii	"f}\341g&\213\311fp\230\242\365R\010VDY\027G\352\342"
 359      268BC966 
 359      7098A2F5 
 359      52085644 
 359      591747EA 
 360 09b1 A36375C6 		.ascii	"\243cu\3068\273\331>WB\231Kgz\2446aFl\254\315\264V\237"
 360      38BBD93E 
 360      5742994B 
 360      677AA436 
 360      61466CAC 
 361 09c9 C0A24BE2 		.ascii	"\300\242K\342\354)\335=\326-\010\327;T\306\030\203M"
 361      EC29DD3D 
 361      D62D08D7 
 361      3B54C618 
 361      834D
 362 09db 833BA111 		.ascii	"\203;\241\021\3330\377\267\377=\211\030R\253-\021\327"
 362      DB30FFB7 
 362      FF3D8918 
 362      52AB2D11 
 362      D7
 363 09ec FE0F20EF 		.ascii	"\376\017 \357\335\002"
 363      DD02
 364              		.text
 365              		.section	.gnu.lto_.symtab.d62ad72e,"",%progbits
 366 0000 61726D5F 		.ascii	"arm_dot_prod_q15\000"
 366      646F745F 
 366      70726F64 
 366      5F713135 
 366      00
 367 0011 00       		.ascii	"\000"
 368 0012 00       		.ascii	"\000"
 369 0013 00       		.ascii	"\000"
 370 0014 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 370      00000000 
 371 001c DB000000 		.ascii	"\333\000\000\000"
 372              		.text
 373              		.section	.gnu.lto_.opts,"",%progbits
 374 0000 272D666D 		.ascii	"'-fmath-errno' '-fsigned-zeros' '-ftrapping-math' '"
 374      6174682D 
 374      6572726E 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 29


 374      6F272027 
 374      2D667369 
 375 0033 2D666E6F 		.ascii	"-fno-trapv' '-fno-openmp' '-fno-openacc' '-mcpu=cor"
 375      2D747261 
 375      70762720 
 375      272D666E 
 375      6F2D6F70 
 376 0066 7465782D 		.ascii	"tex-m4' '-mfloat-abi=softfp' '-mfpu=fpv4-sp-d16' '-"
 376      6D342720 
 376      272D6D66 
 376      6C6F6174 
 376      2D616269 
 377 0099 6D746875 		.ascii	"mthumb' '-g' '-O3' '-ffunction-sections' '-ffat-lto"
 377      6D622720 
 377      272D6727 
 377      20272D4F 
 377      33272027 
 378 00cc 2D6F626A 		.ascii	"-objects' '-finline-functions' '-flto'\000"
 378      65637473 
 378      2720272D 
 378      66696E6C 
 378      696E652D 
 379              		.text
 380              		.cfi_sections	.debug_frame
 381              		.section	.text.arm_dot_prod_q15,"ax",%progbits
 382              		.align	2
 383              		.global	arm_dot_prod_q15
 384              		.thumb
 385              		.thumb_func
 386              		.type	arm_dot_prod_q15, %function
 387              	arm_dot_prod_q15:
 388              	.LFB116:
 389              		.file 1 "CMSIS-DSP-main\\Source\\BasicMathFunctions\\arm_dot_prod_q15.c"
   1:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** /* ----------------------------------------------------------------------
   2:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * Project:      CMSIS DSP Library
   3:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * Title:        arm_dot_prod_q15.c
   4:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * Description:  Q15 dot product
   5:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  *
   6:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * $Date:        23 April 2021
   7:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * $Revision:    V1.9.0
   8:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  *
   9:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * Target Processor: Cortex-M and Cortex-A cores
  10:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * -------------------------------------------------------------------- */
  11:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** /*
  12:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * Copyright (C) 2010-2021 ARM Limited or its affiliates. All rights reserved.
  13:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  *
  14:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  *
  16:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * not use this file except in compliance with the License.
  18:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * You may obtain a copy of the License at
  19:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  *
  20:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  *
  22:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 30


  25:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * See the License for the specific language governing permissions and
  26:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  * limitations under the License.
  27:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  */
  28:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  29:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** #include "dsp/basic_math_functions.h"
  30:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  31:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** /**
  32:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   @ingroup groupMath
  33:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  */
  34:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  35:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** /**
  36:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   @addtogroup BasicDotProd
  37:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   @{
  38:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  */
  39:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  40:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** /**
  41:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   @brief         Dot product of Q15 vectors.
  42:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   @param[in]     pSrcA      points to the first input vector
  43:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   @param[in]     pSrcB      points to the second input vector
  44:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   @param[in]     blockSize  number of samples in each vector
  45:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   @param[out]    result     output result returned here
  46:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  47:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   @par           Scaling and Overflow Behavior
  48:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****                    The intermediate multiplications are in 1.15 x 1.15 = 2.30 format and these
  49:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****                    results are added to a 64-bit accumulator in 34.30 format.
  50:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****                    Nonsaturating additions are used and given that there are 33 guard bits in the a
  51:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****                    there is no risk of overflow.
  52:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****                    The return result is in 34.30 format.
  53:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****  */
  54:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** #if defined(ARM_MATH_MVEI) && !defined(ARM_MATH_AUTOVECTORIZE)
  55:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  56:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** #include "arm_helium_utils.h"
  57:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  58:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** void arm_dot_prod_q15(
  59:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     const q15_t * pSrcA,
  60:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     const q15_t * pSrcB,
  61:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     uint32_t blockSize,
  62:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     q63_t * result)
  63:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** {
  64:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     uint32_t  blkCnt;           /* loop counters */
  65:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     q15x8_t vecA;
  66:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     q15x8_t vecB;
  67:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     q63_t     sum = 0LL;
  68:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
  69:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     /* Compute 8 outputs at a time */
  70:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     blkCnt = blockSize >> 3;
  71:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     while (blkCnt > 0U)
  72:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     {
  73:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****         /*
  74:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****          * C = A[0]* B[0] + A[1]* B[1] + A[2]* B[2] + .....+ A[blockSize-1]* B[blockSize-1]
  75:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****          * Calculate dot product and then store the result in a temporary buffer.
  76:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****          */
  77:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****         vecA = vld1q(pSrcA);
  78:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****         vecB = vld1q(pSrcB);
  79:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****         sum = vmlaldavaq(sum, vecA, vecB);
  80:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****         /*
  81:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****          * Decrement the blockSize loop counter
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 31


  82:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****          */
  83:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****         blkCnt--;
  84:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****         /*
  85:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****          * advance vector source and destination pointers
  86:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****          */
  87:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****         pSrcA += 8;
  88:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****         pSrcB += 8;
  89:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     }
  90:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     /*
  91:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****      * tail
  92:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****      */
  93:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     blkCnt = blockSize & 7;
  94:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     if (blkCnt > 0U)
  95:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     {
  96:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****         mve_pred16_t p0 = vctp16q(blkCnt);
  97:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****         vecA = vld1q(pSrcA);
  98:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****         vecB = vld1q(pSrcB);
  99:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****         sum = vmlaldavaq_p(sum, vecA, vecB, p0);
 100:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     }
 101:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 102:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     *result = sum;
 103:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** }
 104:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 105:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** #else
 106:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** void arm_dot_prod_q15(
 107:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   const q15_t * pSrcA,
 108:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   const q15_t * pSrcB,
 109:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****         uint32_t blockSize,
 110:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****         q63_t * result)
 111:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** {
 390              		.loc 1 111 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 8
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394              	.LVL0:
 395 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 396              		.cfi_def_cfa_offset 28
 397              		.cfi_offset 4, -28
 398              		.cfi_offset 5, -24
 399              		.cfi_offset 6, -20
 400              		.cfi_offset 7, -16
 401              		.cfi_offset 8, -12
 402              		.cfi_offset 9, -8
 403              		.cfi_offset 14, -4
 112:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****         uint32_t blkCnt;                               /* Loop counter */
 113:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****         q63_t sum = 0;                                 /* Temporary return variable */
 114:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 115:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 	#define ARM_MATH_LOOPUNROLL
 116:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** #if defined (ARM_MATH_LOOPUNROLL)
 117:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 118:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 119:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   blkCnt = blockSize >> 2U;
 120:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 121:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   while (blkCnt > 0U)
 404              		.loc 1 121 0
 405 0004 5FEA9208 		lsrs	r8, r2, #2
 111:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****         uint32_t blkCnt;                               /* Loop counter */
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 32


 406              		.loc 1 111 0
 407 0008 83B0     		sub	sp, sp, #12
 408              		.cfi_def_cfa_offset 40
 111:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****         uint32_t blkCnt;                               /* Loop counter */
 409              		.loc 1 111 0
 410 000a 8446     		mov	ip, r0
 411              	.LVL1:
 412 000c 9946     		mov	r9, r3
 413              		.loc 1 121 0
 414 000e 30D0     		beq	.L6
 415 0010 0025     		movs	r5, #0
 416 0012 2C46     		mov	r4, r5
 417 0014 8646     		mov	lr, r0
 418 0016 0F46     		mov	r7, r1
 419 0018 4646     		mov	r6, r8
 420              	.LVL2:
 421              	.L3:
 422              	.LBB16:
 423              	.LBB17:
 424              		.file 2 ".\\CMSIS-DSP-main\\Include/arm_math_memory.h"
   1:.\CMSIS-DSP-main\Include/arm_math_memory.h **** /******************************************************************************
   2:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  * @file     arm_math_memory.h
   3:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  * @brief    Public header file for CMSIS DSP Library
   4:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  * @version  V1.10.0
   5:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  * @date     08 July 2021
   6:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  * Target Processor: Cortex-M and Cortex-A cores
   7:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  ******************************************************************************/
   8:.\CMSIS-DSP-main\Include/arm_math_memory.h **** /*
   9:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  * Copyright (c) 2010-2021 Arm Limited or its affiliates. All rights reserved.
  10:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  *
  11:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  * SPDX-License-Identifier: Apache-2.0
  12:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  *
  13:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  14:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  * not use this file except in compliance with the License.
  15:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  * You may obtain a copy of the License at
  16:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  *
  17:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  * www.apache.org/licenses/LICENSE-2.0
  18:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  *
  19:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  * Unless required by applicable law or agreed to in writing, software
  20:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  21:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  * See the License for the specific language governing permissions and
  23:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  * limitations under the License.
  24:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  */
  25:.\CMSIS-DSP-main\Include/arm_math_memory.h **** 
  26:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #ifndef _ARM_MATH_MEMORY_H_
  27:.\CMSIS-DSP-main\Include/arm_math_memory.h **** 
  28:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #define _ARM_MATH_MEMORY_H_
  29:.\CMSIS-DSP-main\Include/arm_math_memory.h **** 
  30:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #include "arm_math_types.h"
  31:.\CMSIS-DSP-main\Include/arm_math_memory.h **** 
  32:.\CMSIS-DSP-main\Include/arm_math_memory.h **** 
  33:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #ifdef   __cplusplus
  34:.\CMSIS-DSP-main\Include/arm_math_memory.h **** extern "C"
  35:.\CMSIS-DSP-main\Include/arm_math_memory.h **** {
  36:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #endif
  37:.\CMSIS-DSP-main\Include/arm_math_memory.h **** 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 33


  38:.\CMSIS-DSP-main\Include/arm_math_memory.h **** /**
  39:.\CMSIS-DSP-main\Include/arm_math_memory.h ****   @brief definition to read/write two 16 bit values.
  40:.\CMSIS-DSP-main\Include/arm_math_memory.h ****   @deprecated
  41:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  */
  42:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #if   defined ( __CC_ARM )
  43:.\CMSIS-DSP-main\Include/arm_math_memory.h ****   #define __SIMD32_TYPE int32_t __packed
  44:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
  45:.\CMSIS-DSP-main\Include/arm_math_memory.h ****   #define __SIMD32_TYPE int32_t
  46:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #elif defined ( __GNUC__ )
  47:.\CMSIS-DSP-main\Include/arm_math_memory.h ****   #define __SIMD32_TYPE int32_t
  48:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #elif defined ( __ICCARM__ )
  49:.\CMSIS-DSP-main\Include/arm_math_memory.h ****   #define __SIMD32_TYPE int32_t __packed
  50:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #elif defined ( __TI_ARM__ )
  51:.\CMSIS-DSP-main\Include/arm_math_memory.h ****   #define __SIMD32_TYPE int32_t
  52:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #elif defined ( __CSMC__ )
  53:.\CMSIS-DSP-main\Include/arm_math_memory.h ****   #define __SIMD32_TYPE int32_t
  54:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #elif defined ( __TASKING__ )
  55:.\CMSIS-DSP-main\Include/arm_math_memory.h ****   #define __SIMD32_TYPE __un(aligned) int32_t
  56:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #elif defined(_MSC_VER )
  57:.\CMSIS-DSP-main\Include/arm_math_memory.h ****   #define __SIMD32_TYPE int32_t
  58:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #else
  59:.\CMSIS-DSP-main\Include/arm_math_memory.h ****   #error Unknown compiler
  60:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #endif
  61:.\CMSIS-DSP-main\Include/arm_math_memory.h **** 
  62:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
  63:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #define __SIMD32_CONST(addr)  ( (__SIMD32_TYPE * )   (addr))
  64:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE * )   (addr))
  65:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #define __SIMD64(addr)        (*(      int64_t **) & (addr))
  66:.\CMSIS-DSP-main\Include/arm_math_memory.h **** 
  67:.\CMSIS-DSP-main\Include/arm_math_memory.h **** 
  68:.\CMSIS-DSP-main\Include/arm_math_memory.h **** /* SIMD replacement */
  69:.\CMSIS-DSP-main\Include/arm_math_memory.h **** 
  70:.\CMSIS-DSP-main\Include/arm_math_memory.h **** 
  71:.\CMSIS-DSP-main\Include/arm_math_memory.h **** /**
  72:.\CMSIS-DSP-main\Include/arm_math_memory.h ****   @brief         Read 2 Q15 from Q15 pointer.
  73:.\CMSIS-DSP-main\Include/arm_math_memory.h ****   @param[in]     pQ15      points to input value
  74:.\CMSIS-DSP-main\Include/arm_math_memory.h ****   @return        Q31 value
  75:.\CMSIS-DSP-main\Include/arm_math_memory.h ****  */
  76:.\CMSIS-DSP-main\Include/arm_math_memory.h **** __STATIC_FORCEINLINE q31_t read_q15x2 (
  77:.\CMSIS-DSP-main\Include/arm_math_memory.h ****   q15_t const * pQ15)
  78:.\CMSIS-DSP-main\Include/arm_math_memory.h **** {
  79:.\CMSIS-DSP-main\Include/arm_math_memory.h ****   q31_t val;
  80:.\CMSIS-DSP-main\Include/arm_math_memory.h **** 
  81:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #ifdef __ARM_FEATURE_UNALIGNED
  82:.\CMSIS-DSP-main\Include/arm_math_memory.h ****   memcpy (&val, pQ15, 4);
 425              		.loc 2 82 0
 426 001a 5EF8080B 		ldr	r0, [lr], #8	@ unaligned
 427              	.LVL3:
 428 001e 0190     		str	r0, [sp, #4]	@ unaligned
 429              	.LBE17:
 430              	.LBE16:
 431              	.LBB19:
 432              	.LBB20:
 433 0020 57F8080B 		ldr	r0, [r7], #8	@ unaligned
 434              	.LVL4:
 435              	.LBE20:
 436              	.LBE19:
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 34


 437              	.LBB22:
 438              	.LBB18:
  83:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #else
  84:.\CMSIS-DSP-main\Include/arm_math_memory.h ****   val = (pQ15[1] << 16) | (pQ15[0] & 0x0FFFF) ;
  85:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #endif
  86:.\CMSIS-DSP-main\Include/arm_math_memory.h **** 
  87:.\CMSIS-DSP-main\Include/arm_math_memory.h ****   return (val);
 439              		.loc 2 87 0
 440 0024 019B     		ldr	r3, [sp, #4]
 441              	.LVL5:
 442              	.LBE18:
 443              	.LBE22:
 444              	.LBB23:
 445              	.LBB21:
  82:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #else
 446              		.loc 2 82 0
 447 0026 0190     		str	r0, [sp, #4]	@ unaligned
 448              		.loc 2 87 0
 449 0028 0198     		ldr	r0, [sp, #4]
 450              	.LVL6:
 451              	.LBE21:
 452              	.LBE23:
 453              	.LBB24:
 454              	.LBB25:
 455              		.file 3 "Generated_Source\\PSoC6\\pdl\\cmsis/include/cmsis_gcc.h"
   1:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @version  V5.0.3
   5:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @date     16. January 2018
   6:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  25:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  28:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 35


  33:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  34:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  39:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __ASM
  41:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  43:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  46:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  49:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif                                           
  52:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  55:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __USED
  56:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  58:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  61:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  64:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  67:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  70:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  78:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  86:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 36


  90:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  94:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 102:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 110:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 113:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 116:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 117:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 118:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   @{
 122:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 123:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 124:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 125:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 129:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 131:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 133:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 134:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 135:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 142:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 144:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 145:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 146:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 37


 147:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Control Register value
 150:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 151:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 153:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 154:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 155:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 157:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 158:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 159:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 160:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 168:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 170:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 173:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 174:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 175:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 176:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 177:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 181:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 183:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 185:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 186:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 187:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 189:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 193:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 195:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 197:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 198:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 199:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 200:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 201:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               IPSR Register value
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 38


 204:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 205:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 207:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 208:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 209:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 211:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 212:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 213:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 214:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 215:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               APSR Register value
 218:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 219:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 221:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 222:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 223:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 225:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 226:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 227:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 228:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 229:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 233:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 235:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 236:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 237:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 239:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 240:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 241:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 242:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 243:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               PSP Register value
 246:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 247:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 249:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 250:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 251:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 253:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 254:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 255:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 256:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 258:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               PSP Register value
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 39


 261:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 262:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 264:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 265:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 266:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 268:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 269:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 270:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 271:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 272:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 273:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 277:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 279:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 281:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 282:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 283:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 285:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 289:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 291:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 293:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 294:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 295:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 296:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 297:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               MSP Register value
 300:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 301:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 303:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 304:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 305:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 307:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 308:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 309:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 310:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 312:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               MSP Register value
 315:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 316:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 40


 318:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 319:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 320:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 322:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 323:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 324:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 325:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 326:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 327:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 331:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 333:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 335:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 336:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 337:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 339:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 343:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 345:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 347:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 348:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 349:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 350:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 352:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               SP Register value
 355:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 356:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 358:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 359:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 360:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 362:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 363:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 364:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 365:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 372:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 374:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 41


 375:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 376:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 377:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 378:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 382:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 384:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 385:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 386:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 388:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 389:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 390:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 391:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 393:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 397:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 399:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 400:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 401:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 403:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 404:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 405:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 406:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 407:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 408:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 412:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 414:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 416:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 417:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 418:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 420:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 424:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 426:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 428:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 429:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 430:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 431:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 42


 432:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 435:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 439:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 441:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 443:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 444:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 445:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 446:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 450:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 452:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 454:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 455:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 456:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 457:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 461:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 463:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 464:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 465:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 467:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 468:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 469:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 470:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 472:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 476:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 478:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 479:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 480:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 482:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 483:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 484:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 485:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 486:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 487:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 43


 489:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 491:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 493:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 495:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 496:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 497:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 499:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 503:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 505:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 507:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 508:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 509:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 510:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 511:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 516:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 518:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 520:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 521:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 522:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 523:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 527:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 529:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 530:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 531:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 533:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 534:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 535:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 536:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 538:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 542:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 544:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 545:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 44


 546:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 548:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 549:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 550:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 551:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 552:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 553:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 557:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 559:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 561:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 562:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 563:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 565:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 569:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 571:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 573:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 574:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 575:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 579:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 580:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 583:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 584:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   mode.
 588:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   
 589:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 592:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 594:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return 0U;
 598:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 599:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 600:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return result;
 602:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 45


 603:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 604:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 605:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 607:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 611:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 614:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 616:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return 0U;
 619:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 620:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 621:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return result;
 623:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 624:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 625:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 626:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 627:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 628:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 629:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   mode.
 633:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   
 634:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 637:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 639:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 644:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 646:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 647:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 648:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 649:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 651:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 655:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 658:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 46


 660:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 664:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 666:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 667:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 668:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 669:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 670:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 671:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   mode.
 675:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 676:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 679:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 681:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return 0U;
 685:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 686:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 687:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return result;
 689:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 690:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 691:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 692:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 693:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 695:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 699:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 702:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 704:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return 0U;
 707:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 708:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 709:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return result;
 711:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 712:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 713:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 714:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 715:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 716:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 47


 717:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   mode.
 721:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 722:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 725:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 727:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 732:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 734:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 735:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 736:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 737:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 739:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 743:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 748:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 752:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 754:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 755:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 756:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 757:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 760:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 761:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 762:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 763:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 764:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 765:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get FPSCR
 766:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 767:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 768:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 770:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 771:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 772:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 773:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >=
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 48


 774:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 775:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 776:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 777:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 778:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 779:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 780:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 781:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 782:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 783:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(0U);
 784:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 785:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 786:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 787:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 788:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 789:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set FPSCR
 790:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 791:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 792:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 793:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 794:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 795:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 796:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 797:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr) || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >=
 798:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 799:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 800:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 801:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 802:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 803:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 804:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   (void)fpscr;
 805:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 806:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 807:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 808:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 809:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 810:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 811:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 812:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 813:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 814:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 815:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 816:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 817:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 818:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Access to dedicated instructions
 819:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   @{
 820:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** */
 821:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 822:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 823:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 824:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 825:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 826:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 827:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 828:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 829:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 830:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 49


 831:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 832:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 833:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 834:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 835:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 836:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   No Operation
 837:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 838:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 839:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 840:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 841:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 842:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 843:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 844:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 845:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 846:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 847:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 848:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 849:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Wait For Event
 850:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 851:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 852:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 853:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 854:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 855:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 856:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 857:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Send Event
 858:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 859:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 860:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 861:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 862:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 863:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 864:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 865:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 866:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 867:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            after the instruction has been completed.
 868:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 869:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 870:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 871:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 872:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 873:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 874:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 875:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 876:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 877:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 878:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 879:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 880:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 881:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 882:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 883:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 884:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 885:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 886:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 887:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Data Memory Barrier
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 50


 888:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 889:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 890:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 891:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 892:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 893:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 894:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 895:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 896:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 897:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 898:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 899:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 900:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 901:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Reversed value
 902:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 903:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 904:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 905:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 906:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 907:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 908:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 909:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 910:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 911:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return result;
 912:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 913:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 914:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 915:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 916:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 917:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 918:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 919:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 920:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Reversed value
 921:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 922:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 923:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 924:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 925:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 926:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 927:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return result;
 928:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 929:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 930:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 931:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 932:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 933:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 934:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 935:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Reversed value
 936:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 937:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 938:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 939:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 940:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 941:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 942:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   int16_t result;
 943:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 944:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 51


 945:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return result;
 946:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 947:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 948:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 949:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 950:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 951:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 952:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 953:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 954:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 955:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Rotated value
 956:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 957:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 958:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 959:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   op2 %= 32U;
 960:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   if (op2 == 0U)
 961:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   {
 962:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     return op1;
 963:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   }
 964:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 965:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 966:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 967:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 968:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 969:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Breakpoint
 970:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 971:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 972:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 973:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 974:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 975:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 976:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 977:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 978:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 979:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 980:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 981:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 982:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Reversed value
 983:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 984:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 985:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 986:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 987:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 988:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 989:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 990:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 991:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 992:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 993:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 994:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 995:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 996:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 997:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   {
 998:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     result <<= 1U;
 999:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     result |= value & 1U;
1000:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     s--;
1001:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   }
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 52


1002:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1003:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
1004:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return result;
1005:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1006:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1007:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1008:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1009:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Count leading zeros
1010:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1011:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1012:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return             number of leading zeros in value
1013:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1014:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CLZ             (uint8_t)__builtin_clz
1015:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1016:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1017:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1018:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1019:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1020:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1021:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1022:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1023:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1024:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1025:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1026:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1027:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1028:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1029:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     uint32_t result;
1030:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1031:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1032:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1033:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
1034:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1035:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1036:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     */
1037:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1038:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
1039:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1040:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1041:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1042:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1043:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1044:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1045:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1046:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1047:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1048:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1049:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1050:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1051:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     uint32_t result;
1052:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1053:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1054:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1055:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
1056:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1057:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1058:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     */
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 53


1059:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1060:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
1061:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1062:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1063:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1064:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1065:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1066:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1067:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1068:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1069:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1070:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1071:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1072:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1073:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     uint32_t result;
1074:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1075:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
1076:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    return(result);
1077:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1078:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1079:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1080:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1081:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1082:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1083:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]  value  Value to store
1084:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1085:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return          0  Function succeeded
1086:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return          1  Function failed
1087:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1088:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1089:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1090:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    uint32_t result;
1091:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1092:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1093:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    return(result);
1094:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1095:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1096:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1097:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1098:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1099:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1100:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]  value  Value to store
1101:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1102:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return          0  Function succeeded
1103:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return          1  Function failed
1104:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1105:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1106:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1107:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    uint32_t result;
1108:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1109:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1110:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    return(result);
1111:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1112:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1113:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1114:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1115:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 54


1116:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1117:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]  value  Value to store
1118:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1119:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return          0  Function succeeded
1120:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return          1  Function failed
1121:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1122:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1123:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1124:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    uint32_t result;
1125:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1126:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
1127:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    return(result);
1128:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1129:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1130:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1131:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1132:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
1133:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1134:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1135:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
1136:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1137:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1138:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1139:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1140:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1141:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1142:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1143:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1144:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1145:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1146:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1147:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1148:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1149:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1150:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Signed Saturate
1151:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Saturates a signed value.
1152:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1153:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
1154:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return             Saturated value
1155:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1156:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1157:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __extension__ \
1158:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** ({                          \
1159:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1160:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1161:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __RES; \
1162:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  })
1163:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1164:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1165:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1166:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1167:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1168:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1169:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
1170:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return             Saturated value
1171:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1172:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 55


1173:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  __extension__ \
1174:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** ({                          \
1175:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1176:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1177:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __RES; \
1178:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  })
1179:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1180:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1181:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1182:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1183:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1184:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1185:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
1186:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Rotated value
1187:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1188:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
1189:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1190:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1191:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1192:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1193:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1194:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1195:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1196:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1197:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1198:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1199:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1200:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1201:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1202:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1203:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1204:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1205:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     uint32_t result;
1206:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1207:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1208:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1209:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
1210:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1211:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1212:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     */
1213:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1214:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
1215:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1216:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1217:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1218:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1219:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1220:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1221:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1222:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1223:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1224:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1225:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1226:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1227:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     uint32_t result;
1228:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1229:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 56


1230:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1231:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
1232:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1233:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1234:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     */
1235:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1236:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
1237:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1238:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1239:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1240:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1241:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1242:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1243:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1244:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1245:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1246:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1247:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
1248:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1249:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     uint32_t result;
1250:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1251:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1252:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    return(result);
1253:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1254:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1255:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1256:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1257:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1258:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1259:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]  value  Value to store
1260:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1261:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1262:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1263:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1264:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1265:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1266:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1267:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1268:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1269:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1270:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1271:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]  value  Value to store
1272:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1273:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1274:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1275:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1276:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1277:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1278:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1279:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1280:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1281:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1282:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1283:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]  value  Value to store
1284:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1285:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1286:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 57


1287:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1288:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1289:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1290:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1291:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1292:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1293:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1294:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1295:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1296:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Signed Saturate
1297:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Saturates a signed value.
1298:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1299:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1300:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return             Saturated value
1301:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1302:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
1303:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1304:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
1305:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   {
1306:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
1307:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
1308:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     if (val > max)
1309:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     {
1310:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****       return max;
1311:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     }
1312:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     else if (val < min)
1313:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     {
1314:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****       return min;
1315:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     }
1316:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   }
1317:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return val;
1318:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1319:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1320:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1321:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1322:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1323:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1324:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1325:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return             Saturated value
1326:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1327:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
1328:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1329:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   if (sat <= 31U)
1330:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   {
1331:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
1332:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     if (val > (int32_t)max)
1333:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     {
1334:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****       return max;
1335:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     }
1336:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     else if (val < 0)
1337:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     {
1338:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****       return 0U;
1339:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     }
1340:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   }
1341:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return (uint32_t)val;
1342:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1343:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 58


1344:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1345:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1346:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1347:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1348:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1349:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1350:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1351:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1352:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1353:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1354:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1355:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1356:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1357:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
1358:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1359:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     uint32_t result;
1360:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1361:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1362:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    return ((uint8_t) result);
1363:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1364:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1365:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1366:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1367:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1368:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1369:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1370:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1371:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1372:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
1373:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1374:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     uint32_t result;
1375:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1376:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1377:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    return ((uint16_t) result);
1378:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1379:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1380:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1381:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1382:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1383:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1384:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1385:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1386:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1387:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
1388:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1389:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     uint32_t result;
1390:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1391:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1392:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    return(result);
1393:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1394:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1395:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1396:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1397:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1398:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1399:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]  value  Value to store
1400:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 59


1401:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1402:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1403:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1404:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1405:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1406:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1407:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1408:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1409:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1410:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1411:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]  value  Value to store
1412:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1413:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1414:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1415:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1416:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1417:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1418:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1419:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1420:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1421:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1422:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1423:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]  value  Value to store
1424:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1425:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1426:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1427:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1428:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1429:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1430:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1431:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1432:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1433:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1434:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1435:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1436:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1437:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1438:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1439:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1440:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     uint32_t result;
1441:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1442:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1443:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    return ((uint8_t) result);
1444:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1445:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1446:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1447:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1448:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1449:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1450:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1451:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1452:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1453:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1454:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1455:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     uint32_t result;
1456:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1457:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 60


1458:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    return ((uint16_t) result);
1459:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1460:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1461:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1462:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1463:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1464:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1465:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1466:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1467:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1468:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1469:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1470:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     uint32_t result;
1471:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1472:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1473:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    return(result);
1474:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1475:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1476:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1477:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1478:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1479:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1480:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]  value  Value to store
1481:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1482:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return          0  Function succeeded
1483:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return          1  Function failed
1484:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1485:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
1486:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1487:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    uint32_t result;
1488:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1489:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1490:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    return(result);
1491:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1492:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1493:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1494:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1495:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1496:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1497:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]  value  Value to store
1498:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1499:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return          0  Function succeeded
1500:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return          1  Function failed
1501:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1502:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
1503:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1504:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    uint32_t result;
1505:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1506:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1507:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    return(result);
1508:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1509:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1510:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1511:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
1512:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1513:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1514:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 61


1515:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1516:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return          0  Function succeeded
1517:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return          1  Function failed
1518:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
1519:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
1520:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1521:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    uint32_t result;
1522:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1523:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1524:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****    return(result);
1525:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1526:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1527:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1528:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1529:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1530:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1531:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1532:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1533:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1534:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1535:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Access to dedicated SIMD instructions
1536:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   @{
1537:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** */
1538:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1539:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
1540:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1541:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1542:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1543:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1544:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1545:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1546:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1547:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1548:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1549:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1550:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1551:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1552:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1553:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1554:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1555:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1556:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1557:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1558:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1559:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1560:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1561:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1562:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1563:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1564:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1565:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1566:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1567:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1568:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1569:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1570:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1571:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 62


1572:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1573:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1574:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1575:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1576:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1577:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1578:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1579:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1580:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1581:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1582:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1583:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1584:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1585:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1586:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1587:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1588:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1589:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1590:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1591:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1592:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1593:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1594:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1595:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1596:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1597:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1598:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1599:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1600:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1601:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1602:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1603:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1604:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1605:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1606:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1607:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1608:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1609:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1610:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1611:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1612:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1613:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1614:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1615:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1616:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1617:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1618:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1619:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1620:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1621:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1622:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1623:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1624:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1625:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1626:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1627:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1628:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 63


1629:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1630:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1631:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1632:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1633:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1634:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1635:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1636:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1637:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1638:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1639:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1640:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1641:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1642:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1643:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1644:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1645:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1646:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1647:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1648:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1649:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1650:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1651:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1652:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1653:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1654:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1655:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1656:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1657:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1658:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1659:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1660:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1661:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1662:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1663:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1664:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1665:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1666:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1667:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1668:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1669:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1670:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1671:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1672:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1673:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1674:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1675:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1676:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1677:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1678:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1679:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1680:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1681:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1682:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1683:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1684:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1685:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 64


1686:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1687:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1688:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1689:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1690:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1691:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1692:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1693:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1694:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1695:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1696:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1697:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1698:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1699:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1700:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1701:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1702:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1703:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1704:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1705:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1706:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1707:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1708:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1709:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1710:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1711:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1712:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1713:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1714:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1715:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1716:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1717:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1718:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1719:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1720:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1721:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1722:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1723:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1724:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1725:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1726:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1727:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1728:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1729:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1730:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1731:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1732:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1733:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1734:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1735:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1736:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1737:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1738:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1739:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1740:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1741:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1742:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 65


1743:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1744:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1745:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1746:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1747:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1748:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1749:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1750:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1751:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1752:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1753:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1754:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1755:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1756:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1757:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1758:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1759:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1760:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1761:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1762:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1763:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1764:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1765:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1766:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1767:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1768:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1769:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1770:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1771:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1772:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1773:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1774:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1775:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1776:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1777:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1778:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1779:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1780:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1781:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1782:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1783:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1784:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1785:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1786:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1787:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1788:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1789:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1790:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1791:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1792:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1793:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1794:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1795:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1796:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1797:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1798:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1799:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 66


1800:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1801:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1802:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1803:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1804:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1805:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1806:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1807:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1808:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1809:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1810:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1811:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1812:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1813:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1814:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1815:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1816:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1817:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1818:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1819:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1820:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1821:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1822:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1823:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1824:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1825:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1826:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1827:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1828:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1829:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1830:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1831:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1832:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1833:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1834:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1835:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1836:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1837:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1838:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1839:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32_t op3)
1840:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1841:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1842:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1843:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1844:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1845:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1846:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1847:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1848:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** ({                          \
1849:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1850:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1851:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __RES; \
1852:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  })
1853:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1854:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1855:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** ({                          \
1856:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 67


1857:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1858:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __RES; \
1859:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  })
1860:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1861:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTB16(uint32_t op1)
1862:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1863:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1864:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1865:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1866:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1867:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1868:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1869:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1870:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1871:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1872:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1873:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1874:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1875:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1876:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1877:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTB16(uint32_t op1)
1878:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1879:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1880:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1881:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
1882:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1883:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1884:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1885:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1886:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1887:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1888:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1889:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1890:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1891:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1892:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1893:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1894:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1895:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1896:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1897:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1898:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1899:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1900:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1901:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1902:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1903:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1904:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1905:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1906:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1907:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1908:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1909:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32_t op3)
1910:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1911:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1912:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1913:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 68


1914:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1915:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1916:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1917:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint32_t op3)
1918:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1919:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
1920:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1921:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("smladx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1922:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
1923:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
1924:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1925:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint64_t __SMLALD (uint32_t op1, uint32_t op2, uint64_t acc)
1926:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
1927:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   union llreg_u{
1928:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     uint32_t w32[2];
1929:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     uint64_t w64;
1930:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   } llr;
1931:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   llr.w64 = acc;
1932:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
1933:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef __ARMEB__   /* Little endian */
1934:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("smlald %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (o
 456              		.loc 3 1934 0
 457              		.syntax unified
 458              	@ 1934 "Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h" 1
 459 002a C3FBC054 		smlald r5, r4, r3, r0
 460              	@ 0 "" 2
 461              	.LVL7:
 462              		.thumb
 463              		.syntax unified
 464              	.LBE25:
 465              	.LBE24:
 466              	.LBB26:
 467              	.LBB27:
  82:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #else
 468              		.loc 2 82 0
 469 002e 5EF8040C 		ldr	r0, [lr, #-4]	@ unaligned
 470 0032 0190     		str	r0, [sp, #4]	@ unaligned
 471              	.LBE27:
 472              	.LBE26:
 473              	.LBB29:
 474              	.LBB30:
 475 0034 57F8040C 		ldr	r0, [r7, #-4]	@ unaligned
 476              	.LBE30:
 477              	.LBE29:
 478              	.LBB32:
 479              	.LBB28:
 480              		.loc 2 87 0
 481 0038 019B     		ldr	r3, [sp, #4]
 482              	.LVL8:
 483              	.LBE28:
 484              	.LBE32:
 485              	.LBB33:
 486              	.LBB31:
  82:.\CMSIS-DSP-main\Include/arm_math_memory.h **** #else
 487              		.loc 2 82 0
 488 003a 0190     		str	r0, [sp, #4]	@ unaligned
 489              		.loc 2 87 0
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 69


 490 003c 0198     		ldr	r0, [sp, #4]
 491              	.LVL9:
 492              	.LBE31:
 493              	.LBE33:
 494              	.LBB34:
 495              	.LBB35:
 496              		.loc 3 1934 0
 497              		.syntax unified
 498              	@ 1934 "Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h" 1
 499 003e C3FBC054 		smlald r5, r4, r3, r0
 500              	@ 0 "" 2
 501              	.LVL10:
 502              		.thumb
 503              		.syntax unified
 504              	.LBE35:
 505              	.LBE34:
 506              		.loc 1 121 0
 507 0042 013E     		subs	r6, r6, #1
 508              	.LVL11:
 509 0044 E9D1     		bne	.L3
 510 0046 4FEAC808 		lsl	r8, r8, #3
 511 004a C444     		add	ip, ip, r8
 512 004c 4144     		add	r1, r1, r8
 513              	.LVL12:
 514              	.L2:
 122:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   {
 123:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     /* C = A[0]* B[0] + A[1]* B[1] + A[2]* B[2] + .....+ A[blockSize-1]* B[blockSize-1] */
 124:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 125:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** #if defined (ARM_MATH_DSP)
 126:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     /* Calculate dot product and store result in a temporary buffer. */
 127:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     sum = __SMLALD(read_q15x2_ia (&pSrcA), read_q15x2_ia (&pSrcB), sum);
 128:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     sum = __SMLALD(read_q15x2_ia (&pSrcA), read_q15x2_ia (&pSrcB), sum);
 129:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** #else
 130:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     sum += (q63_t)((q31_t) *pSrcA++ * *pSrcB++);
 131:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     sum += (q63_t)((q31_t) *pSrcA++ * *pSrcB++);
 132:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     sum += (q63_t)((q31_t) *pSrcA++ * *pSrcB++);
 133:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     sum += (q63_t)((q31_t) *pSrcA++ * *pSrcB++);
 134:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** #endif
 135:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 136:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     /* Decrement loop counter */
 137:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     blkCnt--;
 138:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   }
 139:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 140:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   /* Loop unrolling: Compute remaining outputs */
 141:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   blkCnt = blockSize % 0x4U;
 142:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 143:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** #else
 144:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 145:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   /* Initialize blkCnt with number of samples */
 146:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   blkCnt = blockSize;
 147:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 148:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 149:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 150:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   while (blkCnt > 0U)
 515              		.loc 1 150 0
 516 004e 12F00302 		ands	r2, r2, #3
 517              	.LVL13:
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 70


 518 0052 07D0     		beq	.L4
 519              	.LVL14:
 520              	.L5:
 151:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   {
 152:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     /* C = A[0]* B[0] + A[1]* B[1] + A[2]* B[2] + .....+ A[blockSize-1]* B[blockSize-1] */
 153:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 154:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     /* Calculate dot product and store result in a temporary buffer. */
 155:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** #if defined (ARM_MATH_DSP)
 156:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     sum  = __SMLALD(*pSrcA++, *pSrcB++, sum);
 521              		.loc 1 156 0
 522 0054 3CF9023B 		ldrsh	r3, [ip], #2
 523              	.LVL15:
 524 0058 31F9020B 		ldrsh	r0, [r1], #2
 525              	.LVL16:
 526              	.LBB36:
 527              	.LBB37:
 528              		.loc 3 1934 0
 529              		.syntax unified
 530              	@ 1934 "Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h" 1
 531 005c C3FBC054 		smlald r5, r4, r3, r0
 532              	@ 0 "" 2
 533              	.LVL17:
 534              		.thumb
 535              		.syntax unified
 536              	.LBE37:
 537              	.LBE36:
 150:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   {
 538              		.loc 1 150 0
 539 0060 013A     		subs	r2, r2, #1
 540              	.LVL18:
 541 0062 F7D1     		bne	.L5
 542              	.LVL19:
 543              	.L4:
 157:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** #else
 158:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     sum += (q63_t)((q31_t) *pSrcA++ * *pSrcB++);
 159:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** #endif
 160:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 161:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     /* Decrement loop counter */
 162:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****     blkCnt--;
 163:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   }
 164:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
 165:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   /* Store result in destination buffer in 34.30 format */
 166:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c ****   *result = sum;
 544              		.loc 1 166 0
 545 0064 C9F80050 		str	r5, [r9]
 546 0068 C9F80440 		str	r4, [r9, #4]
 167:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** }
 547              		.loc 1 167 0
 548 006c 03B0     		add	sp, sp, #12
 549              		.cfi_remember_state
 550              		.cfi_def_cfa_offset 28
 551              		@ sp needed
 552 006e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 553              	.LVL20:
 554              	.L6:
 555              		.cfi_restore_state
 113:CMSIS-DSP-main\Source\BasicMathFunctions/arm_dot_prod_q15.c **** 
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 71


 556              		.loc 1 113 0
 557 0072 4546     		mov	r5, r8
 558 0074 4446     		mov	r4, r8
 559 0076 EAE7     		b	.L2
 560              		.cfi_endproc
 561              	.LFE116:
 562              		.size	arm_dot_prod_q15, .-arm_dot_prod_q15
 563              		.text
 564              	.Letext0:
 565              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 566              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 567              		.file 6 ".\\CMSIS-DSP-main\\Include/arm_math_types.h"
 568              		.section	.debug_info,"",%progbits
 569              	.Ldebug_info0:
 570 0000 9B030000 		.4byte	0x39b
 571 0004 0400     		.2byte	0x4
 572 0006 00000000 		.4byte	.Ldebug_abbrev0
 573 000a 04       		.byte	0x4
 574 000b 01       		.uleb128 0x1
 575 000c 69000000 		.4byte	.LASF35
 576 0010 0C       		.byte	0xc
 577 0011 41010000 		.4byte	.LASF36
 578 0015 28000000 		.4byte	.LASF37
 579 0019 60000000 		.4byte	.Ldebug_ranges0+0x60
 580 001d 00000000 		.4byte	0
 581 0021 00000000 		.4byte	.Ldebug_line0
 582 0025 02       		.uleb128 0x2
 583 0026 01       		.byte	0x1
 584 0027 06       		.byte	0x6
 585 0028 A5020000 		.4byte	.LASF0
 586 002c 02       		.uleb128 0x2
 587 002d 01       		.byte	0x1
 588 002e 08       		.byte	0x8
 589 002f 83010000 		.4byte	.LASF1
 590 0033 03       		.uleb128 0x3
 591 0034 08000000 		.4byte	.LASF4
 592 0038 04       		.byte	0x4
 593 0039 29       		.byte	0x29
 594 003a 3E000000 		.4byte	0x3e
 595 003e 02       		.uleb128 0x2
 596 003f 02       		.byte	0x2
 597 0040 05       		.byte	0x5
 598 0041 56020000 		.4byte	.LASF2
 599 0045 02       		.uleb128 0x2
 600 0046 02       		.byte	0x2
 601 0047 07       		.byte	0x7
 602 0048 AA010000 		.4byte	.LASF3
 603 004c 03       		.uleb128 0x3
 604 004d 1E000000 		.4byte	.LASF5
 605 0051 04       		.byte	0x4
 606 0052 3F       		.byte	0x3f
 607 0053 57000000 		.4byte	0x57
 608 0057 02       		.uleb128 0x2
 609 0058 04       		.byte	0x4
 610 0059 05       		.byte	0x5
 611 005a 90020000 		.4byte	.LASF6
 612 005e 03       		.uleb128 0x3
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 72


 613 005f DF010000 		.4byte	.LASF7
 614 0063 04       		.byte	0x4
 615 0064 41       		.byte	0x41
 616 0065 69000000 		.4byte	0x69
 617 0069 02       		.uleb128 0x2
 618 006a 04       		.byte	0x4
 619 006b 07       		.byte	0x7
 620 006c 98010000 		.4byte	.LASF8
 621 0070 03       		.uleb128 0x3
 622 0071 CE010000 		.4byte	.LASF9
 623 0075 04       		.byte	0x4
 624 0076 59       		.byte	0x59
 625 0077 7B000000 		.4byte	0x7b
 626 007b 02       		.uleb128 0x2
 627 007c 08       		.byte	0x8
 628 007d 05       		.byte	0x5
 629 007e 39020000 		.4byte	.LASF10
 630 0082 03       		.uleb128 0x3
 631 0083 60020000 		.4byte	.LASF11
 632 0087 04       		.byte	0x4
 633 0088 5B       		.byte	0x5b
 634 0089 8D000000 		.4byte	0x8d
 635 008d 02       		.uleb128 0x2
 636 008e 08       		.byte	0x8
 637 008f 07       		.byte	0x7
 638 0090 FC010000 		.4byte	.LASF12
 639 0094 04       		.uleb128 0x4
 640 0095 04       		.byte	0x4
 641 0096 05       		.byte	0x5
 642 0097 696E7400 		.ascii	"int\000"
 643 009b 02       		.uleb128 0x2
 644 009c 04       		.byte	0x4
 645 009d 07       		.byte	0x7
 646 009e EA010000 		.4byte	.LASF13
 647 00a2 03       		.uleb128 0x3
 648 00a3 20020000 		.4byte	.LASF14
 649 00a7 05       		.byte	0x5
 650 00a8 20       		.byte	0x20
 651 00a9 33000000 		.4byte	0x33
 652 00ad 03       		.uleb128 0x3
 653 00ae 28020000 		.4byte	.LASF15
 654 00b2 05       		.byte	0x5
 655 00b3 2C       		.byte	0x2c
 656 00b4 4C000000 		.4byte	0x4c
 657 00b8 03       		.uleb128 0x3
 658 00b9 87020000 		.4byte	.LASF16
 659 00bd 05       		.byte	0x5
 660 00be 30       		.byte	0x30
 661 00bf 5E000000 		.4byte	0x5e
 662 00c3 03       		.uleb128 0x3
 663 00c4 00000000 		.4byte	.LASF17
 664 00c8 05       		.byte	0x5
 665 00c9 38       		.byte	0x38
 666 00ca 70000000 		.4byte	0x70
 667 00ce 03       		.uleb128 0x3
 668 00cf 60000000 		.4byte	.LASF18
 669 00d3 05       		.byte	0x5
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 73


 670 00d4 3C       		.byte	0x3c
 671 00d5 82000000 		.4byte	0x82
 672 00d9 02       		.uleb128 0x2
 673 00da 08       		.byte	0x8
 674 00db 04       		.byte	0x4
 675 00dc 99020000 		.4byte	.LASF19
 676 00e0 02       		.uleb128 0x2
 677 00e1 04       		.byte	0x4
 678 00e2 07       		.byte	0x7
 679 00e3 30020000 		.4byte	.LASF20
 680 00e7 02       		.uleb128 0x2
 681 00e8 01       		.byte	0x1
 682 00e9 08       		.byte	0x8
 683 00ea 51020000 		.4byte	.LASF21
 684 00ee 02       		.uleb128 0x2
 685 00ef 08       		.byte	0x8
 686 00f0 04       		.byte	0x4
 687 00f1 D8010000 		.4byte	.LASF22
 688 00f5 02       		.uleb128 0x2
 689 00f6 04       		.byte	0x4
 690 00f7 04       		.byte	0x4
 691 00f8 3B010000 		.4byte	.LASF23
 692 00fc 05       		.uleb128 0x5
 693 00fd 35010000 		.4byte	.LASF24
 694 0101 06       		.byte	0x6
 695 0102 2A01     		.2byte	0x12a
 696 0104 A2000000 		.4byte	0xa2
 697 0108 05       		.uleb128 0x5
 698 0109 7D010000 		.4byte	.LASF25
 699 010d 06       		.byte	0x6
 700 010e 2F01     		.2byte	0x12f
 701 0110 AD000000 		.4byte	0xad
 702 0114 05       		.uleb128 0x5
 703 0115 1A020000 		.4byte	.LASF26
 704 0119 06       		.byte	0x6
 705 011a 3401     		.2byte	0x134
 706 011c C3000000 		.4byte	0xc3
 707 0120 06       		.uleb128 0x6
 708 0121 C5010000 		.4byte	.LASF27
 709 0125 03       		.byte	0x3
 710 0126 8507     		.2byte	0x785
 711 0128 CE000000 		.4byte	0xce
 712 012c 03       		.byte	0x3
 713 012d 88010000 		.4byte	0x188
 714 0131 07       		.uleb128 0x7
 715 0132 6F703100 		.ascii	"op1\000"
 716 0136 03       		.byte	0x3
 717 0137 8507     		.2byte	0x785
 718 0139 B8000000 		.4byte	0xb8
 719 013d 07       		.uleb128 0x7
 720 013e 6F703200 		.ascii	"op2\000"
 721 0142 03       		.byte	0x3
 722 0143 8507     		.2byte	0x785
 723 0145 B8000000 		.4byte	0xb8
 724 0149 07       		.uleb128 0x7
 725 014a 61636300 		.ascii	"acc\000"
 726 014e 03       		.byte	0x3
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 74


 727 014f 8507     		.2byte	0x785
 728 0151 CE000000 		.4byte	0xce
 729 0155 08       		.uleb128 0x8
 730 0156 BD010000 		.4byte	.LASF38
 731 015a 08       		.byte	0x8
 732 015b 03       		.byte	0x3
 733 015c 8707     		.2byte	0x787
 734 015e 7B010000 		.4byte	0x17b
 735 0162 09       		.uleb128 0x9
 736 0163 77333200 		.ascii	"w32\000"
 737 0167 03       		.byte	0x3
 738 0168 8807     		.2byte	0x788
 739 016a 88010000 		.4byte	0x188
 740 016e 09       		.uleb128 0x9
 741 016f 77363400 		.ascii	"w64\000"
 742 0173 03       		.byte	0x3
 743 0174 8907     		.2byte	0x789
 744 0176 CE000000 		.4byte	0xce
 745 017a 00       		.byte	0
 746 017b 0A       		.uleb128 0xa
 747 017c 6C6C7200 		.ascii	"llr\000"
 748 0180 03       		.byte	0x3
 749 0181 8A07     		.2byte	0x78a
 750 0183 55010000 		.4byte	0x155
 751 0187 00       		.byte	0
 752 0188 0B       		.uleb128 0xb
 753 0189 B8000000 		.4byte	0xb8
 754 018d 98010000 		.4byte	0x198
 755 0191 0C       		.uleb128 0xc
 756 0192 E0000000 		.4byte	0xe0
 757 0196 01       		.byte	0x1
 758 0197 00       		.byte	0
 759 0198 0D       		.uleb128 0xd
 760 0199 6B020000 		.4byte	.LASF28
 761 019d 02       		.byte	0x2
 762 019e 4C       		.byte	0x4c
 763 019f 08010000 		.4byte	0x108
 764 01a3 03       		.byte	0x3
 765 01a4 BF010000 		.4byte	0x1bf
 766 01a8 0E       		.uleb128 0xe
 767 01a9 F7010000 		.4byte	.LASF29
 768 01ad 02       		.byte	0x2
 769 01ae 4D       		.byte	0x4d
 770 01af BF010000 		.4byte	0x1bf
 771 01b3 0F       		.uleb128 0xf
 772 01b4 76616C00 		.ascii	"val\000"
 773 01b8 02       		.byte	0x2
 774 01b9 4F       		.byte	0x4f
 775 01ba 08010000 		.4byte	0x108
 776 01be 00       		.byte	0
 777 01bf 10       		.uleb128 0x10
 778 01c0 04       		.byte	0x4
 779 01c1 C5010000 		.4byte	0x1c5
 780 01c5 11       		.uleb128 0x11
 781 01c6 FC000000 		.4byte	0xfc
 782 01ca 12       		.uleb128 0x12
 783 01cb 76020000 		.4byte	.LASF39
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 75


 784 01cf 01       		.byte	0x1
 785 01d0 6A       		.byte	0x6a
 786 01d1 00000000 		.4byte	.LFB116
 787 01d5 78000000 		.4byte	.LFE116-.LFB116
 788 01d9 01       		.uleb128 0x1
 789 01da 9C       		.byte	0x9c
 790 01db 98030000 		.4byte	0x398
 791 01df 13       		.uleb128 0x13
 792 01e0 12000000 		.4byte	.LASF30
 793 01e4 01       		.byte	0x1
 794 01e5 6B       		.byte	0x6b
 795 01e6 BF010000 		.4byte	0x1bf
 796 01ea 00000000 		.4byte	.LLST0
 797 01ee 13       		.uleb128 0x13
 798 01ef 18000000 		.4byte	.LASF31
 799 01f3 01       		.byte	0x1
 800 01f4 6C       		.byte	0x6c
 801 01f5 BF010000 		.4byte	0x1bf
 802 01f9 66000000 		.4byte	.LLST1
 803 01fd 13       		.uleb128 0x13
 804 01fe 47020000 		.4byte	.LASF32
 805 0202 01       		.byte	0x1
 806 0203 6D       		.byte	0x6d
 807 0204 B8000000 		.4byte	0xb8
 808 0208 BF000000 		.4byte	.LLST2
 809 020c 13       		.uleb128 0x13
 810 020d 13020000 		.4byte	.LASF33
 811 0211 01       		.byte	0x1
 812 0212 6E       		.byte	0x6e
 813 0213 98030000 		.4byte	0x398
 814 0217 EB000000 		.4byte	.LLST3
 815 021b 14       		.uleb128 0x14
 816 021c 91010000 		.4byte	.LASF34
 817 0220 01       		.byte	0x1
 818 0221 70       		.byte	0x70
 819 0222 B8000000 		.4byte	0xb8
 820 0226 14010000 		.4byte	.LLST4
 821 022a 15       		.uleb128 0x15
 822 022b 73756D00 		.ascii	"sum\000"
 823 022f 01       		.byte	0x1
 824 0230 71       		.byte	0x71
 825 0231 14010000 		.4byte	0x114
 826 0235 87010000 		.4byte	.LLST5
 827 0239 16       		.uleb128 0x16
 828 023a 98010000 		.4byte	0x198
 829 023e 1A000000 		.4byte	.LBB16
 830 0242 00000000 		.4byte	.Ldebug_ranges0+0
 831 0246 01       		.byte	0x1
 832 0247 7F       		.byte	0x7f
 833 0248 64020000 		.4byte	0x264
 834 024c 17       		.uleb128 0x17
 835 024d A8010000 		.4byte	0x1a8
 836 0251 C7010000 		.4byte	.LLST6
 837 0255 18       		.uleb128 0x18
 838 0256 00000000 		.4byte	.Ldebug_ranges0+0
 839 025a 19       		.uleb128 0x19
 840 025b B3010000 		.4byte	0x1b3
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 76


 841 025f 02       		.uleb128 0x2
 842 0260 91       		.byte	0x91
 843 0261 5C       		.sleb128 -36
 844 0262 00       		.byte	0
 845 0263 00       		.byte	0
 846 0264 16       		.uleb128 0x16
 847 0265 98010000 		.4byte	0x198
 848 0269 20000000 		.4byte	.LBB19
 849 026d 18000000 		.4byte	.Ldebug_ranges0+0x18
 850 0271 01       		.byte	0x1
 851 0272 7F       		.byte	0x7f
 852 0273 8B020000 		.4byte	0x28b
 853 0277 1A       		.uleb128 0x1a
 854 0278 A8010000 		.4byte	0x1a8
 855 027c 18       		.uleb128 0x18
 856 027d 18000000 		.4byte	.Ldebug_ranges0+0x18
 857 0281 19       		.uleb128 0x19
 858 0282 B3010000 		.4byte	0x1b3
 859 0286 02       		.uleb128 0x2
 860 0287 91       		.byte	0x91
 861 0288 5C       		.sleb128 -36
 862 0289 00       		.byte	0
 863 028a 00       		.byte	0
 864 028b 1B       		.uleb128 0x1b
 865 028c 20010000 		.4byte	0x120
 866 0290 2A000000 		.4byte	.LBB24
 867 0294 04000000 		.4byte	.LBE24-.LBB24
 868 0298 01       		.byte	0x1
 869 0299 7F       		.byte	0x7f
 870 029a C9020000 		.4byte	0x2c9
 871 029e 17       		.uleb128 0x17
 872 029f 49010000 		.4byte	0x149
 873 02a3 E7010000 		.4byte	.LLST7
 874 02a7 17       		.uleb128 0x17
 875 02a8 3D010000 		.4byte	0x13d
 876 02ac FF010000 		.4byte	.LLST8
 877 02b0 17       		.uleb128 0x17
 878 02b1 31010000 		.4byte	0x131
 879 02b5 12020000 		.4byte	.LLST9
 880 02b9 1C       		.uleb128 0x1c
 881 02ba 2A000000 		.4byte	.LBB25
 882 02be 04000000 		.4byte	.LBE25-.LBB25
 883 02c2 1D       		.uleb128 0x1d
 884 02c3 7B010000 		.4byte	0x17b
 885 02c7 00       		.byte	0
 886 02c8 00       		.byte	0
 887 02c9 16       		.uleb128 0x16
 888 02ca 98010000 		.4byte	0x198
 889 02ce 2E000000 		.4byte	.LBB26
 890 02d2 30000000 		.4byte	.Ldebug_ranges0+0x30
 891 02d6 01       		.byte	0x1
 892 02d7 80       		.byte	0x80
 893 02d8 F4020000 		.4byte	0x2f4
 894 02dc 17       		.uleb128 0x17
 895 02dd A8010000 		.4byte	0x1a8
 896 02e1 25020000 		.4byte	.LLST10
 897 02e5 18       		.uleb128 0x18
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 77


 898 02e6 30000000 		.4byte	.Ldebug_ranges0+0x30
 899 02ea 19       		.uleb128 0x19
 900 02eb B3010000 		.4byte	0x1b3
 901 02ef 02       		.uleb128 0x2
 902 02f0 91       		.byte	0x91
 903 02f1 5C       		.sleb128 -36
 904 02f2 00       		.byte	0
 905 02f3 00       		.byte	0
 906 02f4 16       		.uleb128 0x16
 907 02f5 98010000 		.4byte	0x198
 908 02f9 34000000 		.4byte	.LBB29
 909 02fd 48000000 		.4byte	.Ldebug_ranges0+0x48
 910 0301 01       		.byte	0x1
 911 0302 80       		.byte	0x80
 912 0303 1F030000 		.4byte	0x31f
 913 0307 17       		.uleb128 0x17
 914 0308 A8010000 		.4byte	0x1a8
 915 030c 3A020000 		.4byte	.LLST11
 916 0310 18       		.uleb128 0x18
 917 0311 48000000 		.4byte	.Ldebug_ranges0+0x48
 918 0315 19       		.uleb128 0x19
 919 0316 B3010000 		.4byte	0x1b3
 920 031a 02       		.uleb128 0x2
 921 031b 91       		.byte	0x91
 922 031c 5C       		.sleb128 -36
 923 031d 00       		.byte	0
 924 031e 00       		.byte	0
 925 031f 1B       		.uleb128 0x1b
 926 0320 20010000 		.4byte	0x120
 927 0324 3E000000 		.4byte	.LBB34
 928 0328 04000000 		.4byte	.LBE34-.LBB34
 929 032c 01       		.byte	0x1
 930 032d 80       		.byte	0x80
 931 032e 5D030000 		.4byte	0x35d
 932 0332 17       		.uleb128 0x17
 933 0333 49010000 		.4byte	0x149
 934 0337 4F020000 		.4byte	.LLST12
 935 033b 17       		.uleb128 0x17
 936 033c 3D010000 		.4byte	0x13d
 937 0340 67020000 		.4byte	.LLST13
 938 0344 17       		.uleb128 0x17
 939 0345 31010000 		.4byte	0x131
 940 0349 7A020000 		.4byte	.LLST14
 941 034d 1C       		.uleb128 0x1c
 942 034e 3E000000 		.4byte	.LBB35
 943 0352 04000000 		.4byte	.LBE35-.LBB35
 944 0356 1D       		.uleb128 0x1d
 945 0357 7B010000 		.4byte	0x17b
 946 035b 00       		.byte	0
 947 035c 00       		.byte	0
 948 035d 1E       		.uleb128 0x1e
 949 035e 20010000 		.4byte	0x120
 950 0362 5C000000 		.4byte	.LBB36
 951 0366 04000000 		.4byte	.LBE36-.LBB36
 952 036a 01       		.byte	0x1
 953 036b 9C       		.byte	0x9c
 954 036c 17       		.uleb128 0x17
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 78


 955 036d 49010000 		.4byte	0x149
 956 0371 8D020000 		.4byte	.LLST15
 957 0375 17       		.uleb128 0x17
 958 0376 3D010000 		.4byte	0x13d
 959 037a A5020000 		.4byte	.LLST16
 960 037e 17       		.uleb128 0x17
 961 037f 31010000 		.4byte	0x131
 962 0383 B8020000 		.4byte	.LLST17
 963 0387 1C       		.uleb128 0x1c
 964 0388 5C000000 		.4byte	.LBB37
 965 038c 04000000 		.4byte	.LBE37-.LBB37
 966 0390 1D       		.uleb128 0x1d
 967 0391 7B010000 		.4byte	0x17b
 968 0395 00       		.byte	0
 969 0396 00       		.byte	0
 970 0397 00       		.byte	0
 971 0398 10       		.uleb128 0x10
 972 0399 04       		.byte	0x4
 973 039a 14010000 		.4byte	0x114
 974 039e 00       		.byte	0
 975              		.section	.debug_abbrev,"",%progbits
 976              	.Ldebug_abbrev0:
 977 0000 01       		.uleb128 0x1
 978 0001 11       		.uleb128 0x11
 979 0002 01       		.byte	0x1
 980 0003 25       		.uleb128 0x25
 981 0004 0E       		.uleb128 0xe
 982 0005 13       		.uleb128 0x13
 983 0006 0B       		.uleb128 0xb
 984 0007 03       		.uleb128 0x3
 985 0008 0E       		.uleb128 0xe
 986 0009 1B       		.uleb128 0x1b
 987 000a 0E       		.uleb128 0xe
 988 000b 55       		.uleb128 0x55
 989 000c 17       		.uleb128 0x17
 990 000d 11       		.uleb128 0x11
 991 000e 01       		.uleb128 0x1
 992 000f 10       		.uleb128 0x10
 993 0010 17       		.uleb128 0x17
 994 0011 00       		.byte	0
 995 0012 00       		.byte	0
 996 0013 02       		.uleb128 0x2
 997 0014 24       		.uleb128 0x24
 998 0015 00       		.byte	0
 999 0016 0B       		.uleb128 0xb
 1000 0017 0B       		.uleb128 0xb
 1001 0018 3E       		.uleb128 0x3e
 1002 0019 0B       		.uleb128 0xb
 1003 001a 03       		.uleb128 0x3
 1004 001b 0E       		.uleb128 0xe
 1005 001c 00       		.byte	0
 1006 001d 00       		.byte	0
 1007 001e 03       		.uleb128 0x3
 1008 001f 16       		.uleb128 0x16
 1009 0020 00       		.byte	0
 1010 0021 03       		.uleb128 0x3
 1011 0022 0E       		.uleb128 0xe
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 79


 1012 0023 3A       		.uleb128 0x3a
 1013 0024 0B       		.uleb128 0xb
 1014 0025 3B       		.uleb128 0x3b
 1015 0026 0B       		.uleb128 0xb
 1016 0027 49       		.uleb128 0x49
 1017 0028 13       		.uleb128 0x13
 1018 0029 00       		.byte	0
 1019 002a 00       		.byte	0
 1020 002b 04       		.uleb128 0x4
 1021 002c 24       		.uleb128 0x24
 1022 002d 00       		.byte	0
 1023 002e 0B       		.uleb128 0xb
 1024 002f 0B       		.uleb128 0xb
 1025 0030 3E       		.uleb128 0x3e
 1026 0031 0B       		.uleb128 0xb
 1027 0032 03       		.uleb128 0x3
 1028 0033 08       		.uleb128 0x8
 1029 0034 00       		.byte	0
 1030 0035 00       		.byte	0
 1031 0036 05       		.uleb128 0x5
 1032 0037 16       		.uleb128 0x16
 1033 0038 00       		.byte	0
 1034 0039 03       		.uleb128 0x3
 1035 003a 0E       		.uleb128 0xe
 1036 003b 3A       		.uleb128 0x3a
 1037 003c 0B       		.uleb128 0xb
 1038 003d 3B       		.uleb128 0x3b
 1039 003e 05       		.uleb128 0x5
 1040 003f 49       		.uleb128 0x49
 1041 0040 13       		.uleb128 0x13
 1042 0041 00       		.byte	0
 1043 0042 00       		.byte	0
 1044 0043 06       		.uleb128 0x6
 1045 0044 2E       		.uleb128 0x2e
 1046 0045 01       		.byte	0x1
 1047 0046 03       		.uleb128 0x3
 1048 0047 0E       		.uleb128 0xe
 1049 0048 3A       		.uleb128 0x3a
 1050 0049 0B       		.uleb128 0xb
 1051 004a 3B       		.uleb128 0x3b
 1052 004b 05       		.uleb128 0x5
 1053 004c 27       		.uleb128 0x27
 1054 004d 19       		.uleb128 0x19
 1055 004e 49       		.uleb128 0x49
 1056 004f 13       		.uleb128 0x13
 1057 0050 20       		.uleb128 0x20
 1058 0051 0B       		.uleb128 0xb
 1059 0052 01       		.uleb128 0x1
 1060 0053 13       		.uleb128 0x13
 1061 0054 00       		.byte	0
 1062 0055 00       		.byte	0
 1063 0056 07       		.uleb128 0x7
 1064 0057 05       		.uleb128 0x5
 1065 0058 00       		.byte	0
 1066 0059 03       		.uleb128 0x3
 1067 005a 08       		.uleb128 0x8
 1068 005b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 80


 1069 005c 0B       		.uleb128 0xb
 1070 005d 3B       		.uleb128 0x3b
 1071 005e 05       		.uleb128 0x5
 1072 005f 49       		.uleb128 0x49
 1073 0060 13       		.uleb128 0x13
 1074 0061 00       		.byte	0
 1075 0062 00       		.byte	0
 1076 0063 08       		.uleb128 0x8
 1077 0064 17       		.uleb128 0x17
 1078 0065 01       		.byte	0x1
 1079 0066 03       		.uleb128 0x3
 1080 0067 0E       		.uleb128 0xe
 1081 0068 0B       		.uleb128 0xb
 1082 0069 0B       		.uleb128 0xb
 1083 006a 3A       		.uleb128 0x3a
 1084 006b 0B       		.uleb128 0xb
 1085 006c 3B       		.uleb128 0x3b
 1086 006d 05       		.uleb128 0x5
 1087 006e 01       		.uleb128 0x1
 1088 006f 13       		.uleb128 0x13
 1089 0070 00       		.byte	0
 1090 0071 00       		.byte	0
 1091 0072 09       		.uleb128 0x9
 1092 0073 0D       		.uleb128 0xd
 1093 0074 00       		.byte	0
 1094 0075 03       		.uleb128 0x3
 1095 0076 08       		.uleb128 0x8
 1096 0077 3A       		.uleb128 0x3a
 1097 0078 0B       		.uleb128 0xb
 1098 0079 3B       		.uleb128 0x3b
 1099 007a 05       		.uleb128 0x5
 1100 007b 49       		.uleb128 0x49
 1101 007c 13       		.uleb128 0x13
 1102 007d 00       		.byte	0
 1103 007e 00       		.byte	0
 1104 007f 0A       		.uleb128 0xa
 1105 0080 34       		.uleb128 0x34
 1106 0081 00       		.byte	0
 1107 0082 03       		.uleb128 0x3
 1108 0083 08       		.uleb128 0x8
 1109 0084 3A       		.uleb128 0x3a
 1110 0085 0B       		.uleb128 0xb
 1111 0086 3B       		.uleb128 0x3b
 1112 0087 05       		.uleb128 0x5
 1113 0088 49       		.uleb128 0x49
 1114 0089 13       		.uleb128 0x13
 1115 008a 00       		.byte	0
 1116 008b 00       		.byte	0
 1117 008c 0B       		.uleb128 0xb
 1118 008d 01       		.uleb128 0x1
 1119 008e 01       		.byte	0x1
 1120 008f 49       		.uleb128 0x49
 1121 0090 13       		.uleb128 0x13
 1122 0091 01       		.uleb128 0x1
 1123 0092 13       		.uleb128 0x13
 1124 0093 00       		.byte	0
 1125 0094 00       		.byte	0
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 81


 1126 0095 0C       		.uleb128 0xc
 1127 0096 21       		.uleb128 0x21
 1128 0097 00       		.byte	0
 1129 0098 49       		.uleb128 0x49
 1130 0099 13       		.uleb128 0x13
 1131 009a 2F       		.uleb128 0x2f
 1132 009b 0B       		.uleb128 0xb
 1133 009c 00       		.byte	0
 1134 009d 00       		.byte	0
 1135 009e 0D       		.uleb128 0xd
 1136 009f 2E       		.uleb128 0x2e
 1137 00a0 01       		.byte	0x1
 1138 00a1 03       		.uleb128 0x3
 1139 00a2 0E       		.uleb128 0xe
 1140 00a3 3A       		.uleb128 0x3a
 1141 00a4 0B       		.uleb128 0xb
 1142 00a5 3B       		.uleb128 0x3b
 1143 00a6 0B       		.uleb128 0xb
 1144 00a7 27       		.uleb128 0x27
 1145 00a8 19       		.uleb128 0x19
 1146 00a9 49       		.uleb128 0x49
 1147 00aa 13       		.uleb128 0x13
 1148 00ab 20       		.uleb128 0x20
 1149 00ac 0B       		.uleb128 0xb
 1150 00ad 01       		.uleb128 0x1
 1151 00ae 13       		.uleb128 0x13
 1152 00af 00       		.byte	0
 1153 00b0 00       		.byte	0
 1154 00b1 0E       		.uleb128 0xe
 1155 00b2 05       		.uleb128 0x5
 1156 00b3 00       		.byte	0
 1157 00b4 03       		.uleb128 0x3
 1158 00b5 0E       		.uleb128 0xe
 1159 00b6 3A       		.uleb128 0x3a
 1160 00b7 0B       		.uleb128 0xb
 1161 00b8 3B       		.uleb128 0x3b
 1162 00b9 0B       		.uleb128 0xb
 1163 00ba 49       		.uleb128 0x49
 1164 00bb 13       		.uleb128 0x13
 1165 00bc 00       		.byte	0
 1166 00bd 00       		.byte	0
 1167 00be 0F       		.uleb128 0xf
 1168 00bf 34       		.uleb128 0x34
 1169 00c0 00       		.byte	0
 1170 00c1 03       		.uleb128 0x3
 1171 00c2 08       		.uleb128 0x8
 1172 00c3 3A       		.uleb128 0x3a
 1173 00c4 0B       		.uleb128 0xb
 1174 00c5 3B       		.uleb128 0x3b
 1175 00c6 0B       		.uleb128 0xb
 1176 00c7 49       		.uleb128 0x49
 1177 00c8 13       		.uleb128 0x13
 1178 00c9 00       		.byte	0
 1179 00ca 00       		.byte	0
 1180 00cb 10       		.uleb128 0x10
 1181 00cc 0F       		.uleb128 0xf
 1182 00cd 00       		.byte	0
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 82


 1183 00ce 0B       		.uleb128 0xb
 1184 00cf 0B       		.uleb128 0xb
 1185 00d0 49       		.uleb128 0x49
 1186 00d1 13       		.uleb128 0x13
 1187 00d2 00       		.byte	0
 1188 00d3 00       		.byte	0
 1189 00d4 11       		.uleb128 0x11
 1190 00d5 26       		.uleb128 0x26
 1191 00d6 00       		.byte	0
 1192 00d7 49       		.uleb128 0x49
 1193 00d8 13       		.uleb128 0x13
 1194 00d9 00       		.byte	0
 1195 00da 00       		.byte	0
 1196 00db 12       		.uleb128 0x12
 1197 00dc 2E       		.uleb128 0x2e
 1198 00dd 01       		.byte	0x1
 1199 00de 3F       		.uleb128 0x3f
 1200 00df 19       		.uleb128 0x19
 1201 00e0 03       		.uleb128 0x3
 1202 00e1 0E       		.uleb128 0xe
 1203 00e2 3A       		.uleb128 0x3a
 1204 00e3 0B       		.uleb128 0xb
 1205 00e4 3B       		.uleb128 0x3b
 1206 00e5 0B       		.uleb128 0xb
 1207 00e6 27       		.uleb128 0x27
 1208 00e7 19       		.uleb128 0x19
 1209 00e8 11       		.uleb128 0x11
 1210 00e9 01       		.uleb128 0x1
 1211 00ea 12       		.uleb128 0x12
 1212 00eb 06       		.uleb128 0x6
 1213 00ec 40       		.uleb128 0x40
 1214 00ed 18       		.uleb128 0x18
 1215 00ee 9742     		.uleb128 0x2117
 1216 00f0 19       		.uleb128 0x19
 1217 00f1 01       		.uleb128 0x1
 1218 00f2 13       		.uleb128 0x13
 1219 00f3 00       		.byte	0
 1220 00f4 00       		.byte	0
 1221 00f5 13       		.uleb128 0x13
 1222 00f6 05       		.uleb128 0x5
 1223 00f7 00       		.byte	0
 1224 00f8 03       		.uleb128 0x3
 1225 00f9 0E       		.uleb128 0xe
 1226 00fa 3A       		.uleb128 0x3a
 1227 00fb 0B       		.uleb128 0xb
 1228 00fc 3B       		.uleb128 0x3b
 1229 00fd 0B       		.uleb128 0xb
 1230 00fe 49       		.uleb128 0x49
 1231 00ff 13       		.uleb128 0x13
 1232 0100 02       		.uleb128 0x2
 1233 0101 17       		.uleb128 0x17
 1234 0102 00       		.byte	0
 1235 0103 00       		.byte	0
 1236 0104 14       		.uleb128 0x14
 1237 0105 34       		.uleb128 0x34
 1238 0106 00       		.byte	0
 1239 0107 03       		.uleb128 0x3
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 83


 1240 0108 0E       		.uleb128 0xe
 1241 0109 3A       		.uleb128 0x3a
 1242 010a 0B       		.uleb128 0xb
 1243 010b 3B       		.uleb128 0x3b
 1244 010c 0B       		.uleb128 0xb
 1245 010d 49       		.uleb128 0x49
 1246 010e 13       		.uleb128 0x13
 1247 010f 02       		.uleb128 0x2
 1248 0110 17       		.uleb128 0x17
 1249 0111 00       		.byte	0
 1250 0112 00       		.byte	0
 1251 0113 15       		.uleb128 0x15
 1252 0114 34       		.uleb128 0x34
 1253 0115 00       		.byte	0
 1254 0116 03       		.uleb128 0x3
 1255 0117 08       		.uleb128 0x8
 1256 0118 3A       		.uleb128 0x3a
 1257 0119 0B       		.uleb128 0xb
 1258 011a 3B       		.uleb128 0x3b
 1259 011b 0B       		.uleb128 0xb
 1260 011c 49       		.uleb128 0x49
 1261 011d 13       		.uleb128 0x13
 1262 011e 02       		.uleb128 0x2
 1263 011f 17       		.uleb128 0x17
 1264 0120 00       		.byte	0
 1265 0121 00       		.byte	0
 1266 0122 16       		.uleb128 0x16
 1267 0123 1D       		.uleb128 0x1d
 1268 0124 01       		.byte	0x1
 1269 0125 31       		.uleb128 0x31
 1270 0126 13       		.uleb128 0x13
 1271 0127 52       		.uleb128 0x52
 1272 0128 01       		.uleb128 0x1
 1273 0129 55       		.uleb128 0x55
 1274 012a 17       		.uleb128 0x17
 1275 012b 58       		.uleb128 0x58
 1276 012c 0B       		.uleb128 0xb
 1277 012d 59       		.uleb128 0x59
 1278 012e 0B       		.uleb128 0xb
 1279 012f 01       		.uleb128 0x1
 1280 0130 13       		.uleb128 0x13
 1281 0131 00       		.byte	0
 1282 0132 00       		.byte	0
 1283 0133 17       		.uleb128 0x17
 1284 0134 05       		.uleb128 0x5
 1285 0135 00       		.byte	0
 1286 0136 31       		.uleb128 0x31
 1287 0137 13       		.uleb128 0x13
 1288 0138 02       		.uleb128 0x2
 1289 0139 17       		.uleb128 0x17
 1290 013a 00       		.byte	0
 1291 013b 00       		.byte	0
 1292 013c 18       		.uleb128 0x18
 1293 013d 0B       		.uleb128 0xb
 1294 013e 01       		.byte	0x1
 1295 013f 55       		.uleb128 0x55
 1296 0140 17       		.uleb128 0x17
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 84


 1297 0141 00       		.byte	0
 1298 0142 00       		.byte	0
 1299 0143 19       		.uleb128 0x19
 1300 0144 34       		.uleb128 0x34
 1301 0145 00       		.byte	0
 1302 0146 31       		.uleb128 0x31
 1303 0147 13       		.uleb128 0x13
 1304 0148 02       		.uleb128 0x2
 1305 0149 18       		.uleb128 0x18
 1306 014a 00       		.byte	0
 1307 014b 00       		.byte	0
 1308 014c 1A       		.uleb128 0x1a
 1309 014d 05       		.uleb128 0x5
 1310 014e 00       		.byte	0
 1311 014f 31       		.uleb128 0x31
 1312 0150 13       		.uleb128 0x13
 1313 0151 00       		.byte	0
 1314 0152 00       		.byte	0
 1315 0153 1B       		.uleb128 0x1b
 1316 0154 1D       		.uleb128 0x1d
 1317 0155 01       		.byte	0x1
 1318 0156 31       		.uleb128 0x31
 1319 0157 13       		.uleb128 0x13
 1320 0158 11       		.uleb128 0x11
 1321 0159 01       		.uleb128 0x1
 1322 015a 12       		.uleb128 0x12
 1323 015b 06       		.uleb128 0x6
 1324 015c 58       		.uleb128 0x58
 1325 015d 0B       		.uleb128 0xb
 1326 015e 59       		.uleb128 0x59
 1327 015f 0B       		.uleb128 0xb
 1328 0160 01       		.uleb128 0x1
 1329 0161 13       		.uleb128 0x13
 1330 0162 00       		.byte	0
 1331 0163 00       		.byte	0
 1332 0164 1C       		.uleb128 0x1c
 1333 0165 0B       		.uleb128 0xb
 1334 0166 01       		.byte	0x1
 1335 0167 11       		.uleb128 0x11
 1336 0168 01       		.uleb128 0x1
 1337 0169 12       		.uleb128 0x12
 1338 016a 06       		.uleb128 0x6
 1339 016b 00       		.byte	0
 1340 016c 00       		.byte	0
 1341 016d 1D       		.uleb128 0x1d
 1342 016e 34       		.uleb128 0x34
 1343 016f 00       		.byte	0
 1344 0170 31       		.uleb128 0x31
 1345 0171 13       		.uleb128 0x13
 1346 0172 00       		.byte	0
 1347 0173 00       		.byte	0
 1348 0174 1E       		.uleb128 0x1e
 1349 0175 1D       		.uleb128 0x1d
 1350 0176 01       		.byte	0x1
 1351 0177 31       		.uleb128 0x31
 1352 0178 13       		.uleb128 0x13
 1353 0179 11       		.uleb128 0x11
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 85


 1354 017a 01       		.uleb128 0x1
 1355 017b 12       		.uleb128 0x12
 1356 017c 06       		.uleb128 0x6
 1357 017d 58       		.uleb128 0x58
 1358 017e 0B       		.uleb128 0xb
 1359 017f 59       		.uleb128 0x59
 1360 0180 0B       		.uleb128 0xb
 1361 0181 00       		.byte	0
 1362 0182 00       		.byte	0
 1363 0183 00       		.byte	0
 1364              		.section	.debug_loc,"",%progbits
 1365              	.Ldebug_loc0:
 1366              	.LLST0:
 1367 0000 00000000 		.4byte	.LVL0
 1368 0004 1A000000 		.4byte	.LVL2
 1369 0008 0100     		.2byte	0x1
 1370 000a 50       		.byte	0x50
 1371 000b 1A000000 		.4byte	.LVL2
 1372 000f 1E000000 		.4byte	.LVL3
 1373 0013 0300     		.2byte	0x3
 1374 0015 7E       		.byte	0x7e
 1375 0016 04       		.sleb128 4
 1376 0017 9F       		.byte	0x9f
 1377 0018 1E000000 		.4byte	.LVL3
 1378 001c 2E000000 		.4byte	.LVL7
 1379 0020 0300     		.2byte	0x3
 1380 0022 7E       		.byte	0x7e
 1381 0023 7C       		.sleb128 -4
 1382 0024 9F       		.byte	0x9f
 1383 0025 2E000000 		.4byte	.LVL7
 1384 0029 4E000000 		.4byte	.LVL12
 1385 002d 0100     		.2byte	0x1
 1386 002f 5E       		.byte	0x5e
 1387 0030 4E000000 		.4byte	.LVL12
 1388 0034 58000000 		.4byte	.LVL15
 1389 0038 0100     		.2byte	0x1
 1390 003a 5C       		.byte	0x5c
 1391 003b 58000000 		.4byte	.LVL15
 1392 003f 60000000 		.4byte	.LVL17
 1393 0043 0300     		.2byte	0x3
 1394 0045 7C       		.byte	0x7c
 1395 0046 7E       		.sleb128 -2
 1396 0047 9F       		.byte	0x9f
 1397 0048 60000000 		.4byte	.LVL17
 1398 004c 72000000 		.4byte	.LVL20
 1399 0050 0100     		.2byte	0x1
 1400 0052 5C       		.byte	0x5c
 1401 0053 72000000 		.4byte	.LVL20
 1402 0057 78000000 		.4byte	.LFE116
 1403 005b 0100     		.2byte	0x1
 1404 005d 50       		.byte	0x50
 1405 005e 00000000 		.4byte	0
 1406 0062 00000000 		.4byte	0
 1407              	.LLST1:
 1408 0066 00000000 		.4byte	.LVL0
 1409 006a 1A000000 		.4byte	.LVL2
 1410 006e 0100     		.2byte	0x1
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 86


 1411 0070 51       		.byte	0x51
 1412 0071 1A000000 		.4byte	.LVL2
 1413 0075 24000000 		.4byte	.LVL4
 1414 0079 0100     		.2byte	0x1
 1415 007b 57       		.byte	0x57
 1416 007c 24000000 		.4byte	.LVL4
 1417 0080 26000000 		.4byte	.LVL5
 1418 0084 0300     		.2byte	0x3
 1419 0086 77       		.byte	0x77
 1420 0087 78       		.sleb128 -8
 1421 0088 9F       		.byte	0x9f
 1422 0089 3A000000 		.4byte	.LVL8
 1423 008d 4E000000 		.4byte	.LVL12
 1424 0091 0100     		.2byte	0x1
 1425 0093 57       		.byte	0x57
 1426 0094 4E000000 		.4byte	.LVL12
 1427 0098 5C000000 		.4byte	.LVL16
 1428 009c 0100     		.2byte	0x1
 1429 009e 51       		.byte	0x51
 1430 009f 5C000000 		.4byte	.LVL16
 1431 00a3 60000000 		.4byte	.LVL17
 1432 00a7 0300     		.2byte	0x3
 1433 00a9 71       		.byte	0x71
 1434 00aa 7E       		.sleb128 -2
 1435 00ab 9F       		.byte	0x9f
 1436 00ac 60000000 		.4byte	.LVL17
 1437 00b0 78000000 		.4byte	.LFE116
 1438 00b4 0100     		.2byte	0x1
 1439 00b6 51       		.byte	0x51
 1440 00b7 00000000 		.4byte	0
 1441 00bb 00000000 		.4byte	0
 1442              	.LLST2:
 1443 00bf 00000000 		.4byte	.LVL0
 1444 00c3 52000000 		.4byte	.LVL13
 1445 00c7 0100     		.2byte	0x1
 1446 00c9 52       		.byte	0x52
 1447 00ca 52000000 		.4byte	.LVL13
 1448 00ce 72000000 		.4byte	.LVL20
 1449 00d2 0400     		.2byte	0x4
 1450 00d4 F3       		.byte	0xf3
 1451 00d5 01       		.uleb128 0x1
 1452 00d6 52       		.byte	0x52
 1453 00d7 9F       		.byte	0x9f
 1454 00d8 72000000 		.4byte	.LVL20
 1455 00dc 78000000 		.4byte	.LFE116
 1456 00e0 0100     		.2byte	0x1
 1457 00e2 52       		.byte	0x52
 1458 00e3 00000000 		.4byte	0
 1459 00e7 00000000 		.4byte	0
 1460              	.LLST3:
 1461 00eb 00000000 		.4byte	.LVL0
 1462 00ef 1A000000 		.4byte	.LVL2
 1463 00f3 0100     		.2byte	0x1
 1464 00f5 53       		.byte	0x53
 1465 00f6 1A000000 		.4byte	.LVL2
 1466 00fa 72000000 		.4byte	.LVL20
 1467 00fe 0100     		.2byte	0x1
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 87


 1468 0100 59       		.byte	0x59
 1469 0101 72000000 		.4byte	.LVL20
 1470 0105 78000000 		.4byte	.LFE116
 1471 0109 0100     		.2byte	0x1
 1472 010b 53       		.byte	0x53
 1473 010c 00000000 		.4byte	0
 1474 0110 00000000 		.4byte	0
 1475              	.LLST4:
 1476 0114 0C000000 		.4byte	.LVL1
 1477 0118 1A000000 		.4byte	.LVL2
 1478 011c 0100     		.2byte	0x1
 1479 011e 58       		.byte	0x58
 1480 011f 1A000000 		.4byte	.LVL2
 1481 0123 42000000 		.4byte	.LVL10
 1482 0127 0100     		.2byte	0x1
 1483 0129 56       		.byte	0x56
 1484 012a 42000000 		.4byte	.LVL10
 1485 012e 44000000 		.4byte	.LVL11
 1486 0132 0300     		.2byte	0x3
 1487 0134 76       		.byte	0x76
 1488 0135 7F       		.sleb128 -1
 1489 0136 9F       		.byte	0x9f
 1490 0137 44000000 		.4byte	.LVL11
 1491 013b 4E000000 		.4byte	.LVL12
 1492 013f 0100     		.2byte	0x1
 1493 0141 56       		.byte	0x56
 1494 0142 4E000000 		.4byte	.LVL12
 1495 0146 52000000 		.4byte	.LVL13
 1496 014a 0500     		.2byte	0x5
 1497 014c 72       		.byte	0x72
 1498 014d 00       		.sleb128 0
 1499 014e 33       		.byte	0x33
 1500 014f 1A       		.byte	0x1a
 1501 0150 9F       		.byte	0x9f
 1502 0151 52000000 		.4byte	.LVL13
 1503 0155 60000000 		.4byte	.LVL17
 1504 0159 0100     		.2byte	0x1
 1505 015b 52       		.byte	0x52
 1506 015c 60000000 		.4byte	.LVL17
 1507 0160 62000000 		.4byte	.LVL18
 1508 0164 0300     		.2byte	0x3
 1509 0166 72       		.byte	0x72
 1510 0167 7F       		.sleb128 -1
 1511 0168 9F       		.byte	0x9f
 1512 0169 62000000 		.4byte	.LVL18
 1513 016d 72000000 		.4byte	.LVL20
 1514 0171 0100     		.2byte	0x1
 1515 0173 52       		.byte	0x52
 1516 0174 72000000 		.4byte	.LVL20
 1517 0178 78000000 		.4byte	.LFE116
 1518 017c 0100     		.2byte	0x1
 1519 017e 58       		.byte	0x58
 1520 017f 00000000 		.4byte	0
 1521 0183 00000000 		.4byte	0
 1522              	.LLST5:
 1523 0187 00000000 		.4byte	.LVL0
 1524 018b 1A000000 		.4byte	.LVL2
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 88


 1525 018f 0A00     		.2byte	0xa
 1526 0191 9E       		.byte	0x9e
 1527 0192 08       		.uleb128 0x8
 1528 0193 00000000 		.8byte	0
 1528      00000000 
 1529 019b 1A000000 		.4byte	.LVL2
 1530 019f 64000000 		.4byte	.LVL19
 1531 01a3 0600     		.2byte	0x6
 1532 01a5 55       		.byte	0x55
 1533 01a6 93       		.byte	0x93
 1534 01a7 04       		.uleb128 0x4
 1535 01a8 54       		.byte	0x54
 1536 01a9 93       		.byte	0x93
 1537 01aa 04       		.uleb128 0x4
 1538 01ab 72000000 		.4byte	.LVL20
 1539 01af 78000000 		.4byte	.LFE116
 1540 01b3 0A00     		.2byte	0xa
 1541 01b5 9E       		.byte	0x9e
 1542 01b6 08       		.uleb128 0x8
 1543 01b7 00000000 		.8byte	0
 1543      00000000 
 1544 01bf 00000000 		.4byte	0
 1545 01c3 00000000 		.4byte	0
 1546              	.LLST6:
 1547 01c7 1A000000 		.4byte	.LVL2
 1548 01cb 1E000000 		.4byte	.LVL3
 1549 01cf 0100     		.2byte	0x1
 1550 01d1 5E       		.byte	0x5e
 1551 01d2 1E000000 		.4byte	.LVL3
 1552 01d6 26000000 		.4byte	.LVL5
 1553 01da 0300     		.2byte	0x3
 1554 01dc 7E       		.byte	0x7e
 1555 01dd 78       		.sleb128 -8
 1556 01de 9F       		.byte	0x9f
 1557 01df 00000000 		.4byte	0
 1558 01e3 00000000 		.4byte	0
 1559              	.LLST7:
 1560 01e7 2A000000 		.4byte	.LVL6
 1561 01eb 2E000000 		.4byte	.LVL7
 1562 01ef 0600     		.2byte	0x6
 1563 01f1 55       		.byte	0x55
 1564 01f2 93       		.byte	0x93
 1565 01f3 04       		.uleb128 0x4
 1566 01f4 54       		.byte	0x54
 1567 01f5 93       		.byte	0x93
 1568 01f6 04       		.uleb128 0x4
 1569 01f7 00000000 		.4byte	0
 1570 01fb 00000000 		.4byte	0
 1571              	.LLST8:
 1572 01ff 2A000000 		.4byte	.LVL6
 1573 0203 2E000000 		.4byte	.LVL7
 1574 0207 0100     		.2byte	0x1
 1575 0209 50       		.byte	0x50
 1576 020a 00000000 		.4byte	0
 1577 020e 00000000 		.4byte	0
 1578              	.LLST9:
 1579 0212 2A000000 		.4byte	.LVL6
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 89


 1580 0216 2E000000 		.4byte	.LVL7
 1581 021a 0100     		.2byte	0x1
 1582 021c 53       		.byte	0x53
 1583 021d 00000000 		.4byte	0
 1584 0221 00000000 		.4byte	0
 1585              	.LLST10:
 1586 0225 2E000000 		.4byte	.LVL7
 1587 0229 3A000000 		.4byte	.LVL8
 1588 022d 0300     		.2byte	0x3
 1589 022f 7E       		.byte	0x7e
 1590 0230 7C       		.sleb128 -4
 1591 0231 9F       		.byte	0x9f
 1592 0232 00000000 		.4byte	0
 1593 0236 00000000 		.4byte	0
 1594              	.LLST11:
 1595 023a 3A000000 		.4byte	.LVL8
 1596 023e 3E000000 		.4byte	.LVL9
 1597 0242 0300     		.2byte	0x3
 1598 0244 77       		.byte	0x77
 1599 0245 7C       		.sleb128 -4
 1600 0246 9F       		.byte	0x9f
 1601 0247 00000000 		.4byte	0
 1602 024b 00000000 		.4byte	0
 1603              	.LLST12:
 1604 024f 3E000000 		.4byte	.LVL9
 1605 0253 42000000 		.4byte	.LVL10
 1606 0257 0600     		.2byte	0x6
 1607 0259 55       		.byte	0x55
 1608 025a 93       		.byte	0x93
 1609 025b 04       		.uleb128 0x4
 1610 025c 54       		.byte	0x54
 1611 025d 93       		.byte	0x93
 1612 025e 04       		.uleb128 0x4
 1613 025f 00000000 		.4byte	0
 1614 0263 00000000 		.4byte	0
 1615              	.LLST13:
 1616 0267 3E000000 		.4byte	.LVL9
 1617 026b 42000000 		.4byte	.LVL10
 1618 026f 0100     		.2byte	0x1
 1619 0271 50       		.byte	0x50
 1620 0272 00000000 		.4byte	0
 1621 0276 00000000 		.4byte	0
 1622              	.LLST14:
 1623 027a 3E000000 		.4byte	.LVL9
 1624 027e 42000000 		.4byte	.LVL10
 1625 0282 0100     		.2byte	0x1
 1626 0284 53       		.byte	0x53
 1627 0285 00000000 		.4byte	0
 1628 0289 00000000 		.4byte	0
 1629              	.LLST15:
 1630 028d 5C000000 		.4byte	.LVL16
 1631 0291 60000000 		.4byte	.LVL17
 1632 0295 0600     		.2byte	0x6
 1633 0297 55       		.byte	0x55
 1634 0298 93       		.byte	0x93
 1635 0299 04       		.uleb128 0x4
 1636 029a 54       		.byte	0x54
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 90


 1637 029b 93       		.byte	0x93
 1638 029c 04       		.uleb128 0x4
 1639 029d 00000000 		.4byte	0
 1640 02a1 00000000 		.4byte	0
 1641              	.LLST16:
 1642 02a5 5C000000 		.4byte	.LVL16
 1643 02a9 60000000 		.4byte	.LVL17
 1644 02ad 0100     		.2byte	0x1
 1645 02af 50       		.byte	0x50
 1646 02b0 00000000 		.4byte	0
 1647 02b4 00000000 		.4byte	0
 1648              	.LLST17:
 1649 02b8 5C000000 		.4byte	.LVL16
 1650 02bc 60000000 		.4byte	.LVL17
 1651 02c0 0100     		.2byte	0x1
 1652 02c2 53       		.byte	0x53
 1653 02c3 00000000 		.4byte	0
 1654 02c7 00000000 		.4byte	0
 1655              		.section	.debug_aranges,"",%progbits
 1656 0000 1C000000 		.4byte	0x1c
 1657 0004 0200     		.2byte	0x2
 1658 0006 00000000 		.4byte	.Ldebug_info0
 1659 000a 04       		.byte	0x4
 1660 000b 00       		.byte	0
 1661 000c 0000     		.2byte	0
 1662 000e 0000     		.2byte	0
 1663 0010 00000000 		.4byte	.LFB116
 1664 0014 78000000 		.4byte	.LFE116-.LFB116
 1665 0018 00000000 		.4byte	0
 1666 001c 00000000 		.4byte	0
 1667              		.section	.debug_ranges,"",%progbits
 1668              	.Ldebug_ranges0:
 1669 0000 1A000000 		.4byte	.LBB16
 1670 0004 20000000 		.4byte	.LBE16
 1671 0008 24000000 		.4byte	.LBB22
 1672 000c 26000000 		.4byte	.LBE22
 1673 0010 00000000 		.4byte	0
 1674 0014 00000000 		.4byte	0
 1675 0018 20000000 		.4byte	.LBB19
 1676 001c 24000000 		.4byte	.LBE19
 1677 0020 26000000 		.4byte	.LBB23
 1678 0024 2A000000 		.4byte	.LBE23
 1679 0028 00000000 		.4byte	0
 1680 002c 00000000 		.4byte	0
 1681 0030 2E000000 		.4byte	.LBB26
 1682 0034 34000000 		.4byte	.LBE26
 1683 0038 38000000 		.4byte	.LBB32
 1684 003c 3A000000 		.4byte	.LBE32
 1685 0040 00000000 		.4byte	0
 1686 0044 00000000 		.4byte	0
 1687 0048 34000000 		.4byte	.LBB29
 1688 004c 38000000 		.4byte	.LBE29
 1689 0050 3A000000 		.4byte	.LBB33
 1690 0054 3E000000 		.4byte	.LBE33
 1691 0058 00000000 		.4byte	0
 1692 005c 00000000 		.4byte	0
 1693 0060 00000000 		.4byte	.LFB116
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 91


 1694 0064 78000000 		.4byte	.LFE116
 1695 0068 00000000 		.4byte	0
 1696 006c 00000000 		.4byte	0
 1697              		.section	.debug_line,"",%progbits
 1698              	.Ldebug_line0:
 1699 0000 23020000 		.section	.debug_str,"MS",%progbits,1
 1699      0200C901 
 1699      00000201 
 1699      FB0E0D00 
 1699      01010101 
 1700              	.LASF17:
 1701 0000 696E7436 		.ascii	"int64_t\000"
 1701      345F7400 
 1702              	.LASF4:
 1703 0008 5F5F696E 		.ascii	"__int16_t\000"
 1703      7431365F 
 1703      7400
 1704              	.LASF30:
 1705 0012 70537263 		.ascii	"pSrcA\000"
 1705      4100
 1706              	.LASF31:
 1707 0018 70537263 		.ascii	"pSrcB\000"
 1707      4200
 1708              	.LASF5:
 1709 001e 5F5F696E 		.ascii	"__int32_t\000"
 1709      7433325F 
 1709      7400
 1710              	.LASF37:
 1711 0028 433A5C55 		.ascii	"C:\\Users\\rdn\\Documents\\PSoC Creator\\SEES\\ble_"
 1711      73657273 
 1711      5C72646E 
 1711      5C446F63 
 1711      756D656E 
 1712 0055 74657374 		.ascii	"test.cydsn\000"
 1712      2E637964 
 1712      736E00
 1713              	.LASF18:
 1714 0060 75696E74 		.ascii	"uint64_t\000"
 1714      36345F74 
 1714      00
 1715              	.LASF35:
 1716 0069 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1716      43313120 
 1716      352E342E 
 1716      31203230 
 1716      31363036 
 1717 009c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 1717      20726576 
 1717      6973696F 
 1717      6E203233 
 1717      37373135 
 1718 00cf 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -O3 -ffunction-s"
 1718      70202D6D 
 1718      6670753D 
 1718      66707634 
 1718      2D73702D 
 1719 0102 65637469 		.ascii	"ections -ffat-lto-objects -finline-functions -flto\000"
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 92


 1719      6F6E7320 
 1719      2D666661 
 1719      742D6C74 
 1719      6F2D6F62 
 1720              	.LASF24:
 1721 0135 7131355F 		.ascii	"q15_t\000"
 1721      7400
 1722              	.LASF23:
 1723 013b 666C6F61 		.ascii	"float\000"
 1723      7400
 1724              	.LASF36:
 1725 0141 434D5349 		.ascii	"CMSIS-DSP-main\\Source\\BasicMathFunctions\\arm_dot"
 1725      532D4453 
 1725      502D6D61 
 1725      696E5C53 
 1725      6F757263 
 1726 0171 5F70726F 		.ascii	"_prod_q15.c\000"
 1726      645F7131 
 1726      352E6300 
 1727              	.LASF25:
 1728 017d 7133315F 		.ascii	"q31_t\000"
 1728      7400
 1729              	.LASF1:
 1730 0183 756E7369 		.ascii	"unsigned char\000"
 1730      676E6564 
 1730      20636861 
 1730      7200
 1731              	.LASF34:
 1732 0191 626C6B43 		.ascii	"blkCnt\000"
 1732      6E7400
 1733              	.LASF8:
 1734 0198 6C6F6E67 		.ascii	"long unsigned int\000"
 1734      20756E73 
 1734      69676E65 
 1734      6420696E 
 1734      7400
 1735              	.LASF3:
 1736 01aa 73686F72 		.ascii	"short unsigned int\000"
 1736      7420756E 
 1736      7369676E 
 1736      65642069 
 1736      6E7400
 1737              	.LASF38:
 1738 01bd 6C6C7265 		.ascii	"llreg_u\000"
 1738      675F7500 
 1739              	.LASF27:
 1740 01c5 5F5F534D 		.ascii	"__SMLALD\000"
 1740      4C414C44 
 1740      00
 1741              	.LASF9:
 1742 01ce 5F5F696E 		.ascii	"__int64_t\000"
 1742      7436345F 
 1742      7400
 1743              	.LASF22:
 1744 01d8 646F7562 		.ascii	"double\000"
 1744      6C6500
 1745              	.LASF7:
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 93


 1746 01df 5F5F7569 		.ascii	"__uint32_t\000"
 1746      6E743332 
 1746      5F7400
 1747              	.LASF13:
 1748 01ea 756E7369 		.ascii	"unsigned int\000"
 1748      676E6564 
 1748      20696E74 
 1748      00
 1749              	.LASF29:
 1750 01f7 70513135 		.ascii	"pQ15\000"
 1750      00
 1751              	.LASF12:
 1752 01fc 6C6F6E67 		.ascii	"long long unsigned int\000"
 1752      206C6F6E 
 1752      6720756E 
 1752      7369676E 
 1752      65642069 
 1753              	.LASF33:
 1754 0213 72657375 		.ascii	"result\000"
 1754      6C7400
 1755              	.LASF26:
 1756 021a 7136335F 		.ascii	"q63_t\000"
 1756      7400
 1757              	.LASF14:
 1758 0220 696E7431 		.ascii	"int16_t\000"
 1758      365F7400 
 1759              	.LASF15:
 1760 0228 696E7433 		.ascii	"int32_t\000"
 1760      325F7400 
 1761              	.LASF20:
 1762 0230 73697A65 		.ascii	"sizetype\000"
 1762      74797065 
 1762      00
 1763              	.LASF10:
 1764 0239 6C6F6E67 		.ascii	"long long int\000"
 1764      206C6F6E 
 1764      6720696E 
 1764      7400
 1765              	.LASF32:
 1766 0247 626C6F63 		.ascii	"blockSize\000"
 1766      6B53697A 
 1766      6500
 1767              	.LASF21:
 1768 0251 63686172 		.ascii	"char\000"
 1768      00
 1769              	.LASF2:
 1770 0256 73686F72 		.ascii	"short int\000"
 1770      7420696E 
 1770      7400
 1771              	.LASF11:
 1772 0260 5F5F7569 		.ascii	"__uint64_t\000"
 1772      6E743634 
 1772      5F7400
 1773              	.LASF28:
 1774 026b 72656164 		.ascii	"read_q15x2\000"
 1774      5F713135 
 1774      783200
ARM GAS  C:\Users\rdn\AppData\Local\Temp\ccQcolx1.s 			page 94


 1775              	.LASF39:
 1776 0276 61726D5F 		.ascii	"arm_dot_prod_q15\000"
 1776      646F745F 
 1776      70726F64 
 1776      5F713135 
 1776      00
 1777              	.LASF16:
 1778 0287 75696E74 		.ascii	"uint32_t\000"
 1778      33325F74 
 1778      00
 1779              	.LASF6:
 1780 0290 6C6F6E67 		.ascii	"long int\000"
 1780      20696E74 
 1780      00
 1781              	.LASF19:
 1782 0299 6C6F6E67 		.ascii	"long double\000"
 1782      20646F75 
 1782      626C6500 
 1783              	.LASF0:
 1784 02a5 7369676E 		.ascii	"signed char\000"
 1784      65642063 
 1784      68617200 
 1785              		.comm	__gnu_lto_v1,1,1
 1786              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
